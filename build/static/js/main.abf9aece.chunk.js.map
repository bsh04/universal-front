{"version":3,"sources":["serviceWorker.js","services/parameters.js","services/ajaxManager.js","components/public/parts/news.js","components/public/parts/card.js","components/public/parts/cards_carousel.js","components/public/index.js","components/public/contacts.js","components/public/news_list.js","components/public/workshop/workshop_list.js","components/public/about.js","components/public/product_list.js","components/public/workshop/workshop.js","components/public/catalog.js","components/public/footer.js","components/public/parts/category_list.js","components/menu.js","components/loading.js","components/abstract/form.js","components/public/sign_action/login.js","components/public/sign_action/register.js","components/public/sign_action/reset_pass.js","components/public/layout.js","components/admin/product_update.js","components/admin/products_no_image_list.js","components/admin/news/news.js","components/admin/news/stocks.js","components/admin/to_csv.js","components/admin/article.js","components/admin/layout.js","components/private/favorite.js","components/private/basket.js","components/private/change_pass.js","components/private/change_data.js","components/private/order_add.js","components/private/orders.js","components/private/layout.js","components/errorBoundary.js","components/modal.js","App.js","reducers/modal.js","reducers/index.js","reducers/token.js","reducers/user.js","reducers/menu_reload.js","reducers/store.js","index.js","images/loading.gif","images/image-placeholder.png"],"names":["__webpack_require__","d","__webpack_exports__","unregister","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","serverUrl","request","path","arguments","length","undefined","method","data","headers","callback","errorCallback","indexOf","FormData","store","getState","token","options","mode","body","JSON","stringify","Access-Control-Allow-Headers","Authorization","fetch","processResponse","res","statusCode","dispatch","type","payload","show","title","content","error_description","message","btnText","console","log","response","status","text","Promise","all","parse","News","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","news","handleGet","$","carousel","setState","_this2","react_default","a","createElement","id","className","data-ride","map","item","key","data-target","data-slide-to","src","photo","alt","short_content","href","role","data-slide","Component","Card","handleClick","bind","assertThisInitialized","handleBasketAdd","form","favorite","onRemoveFav","update","onReloadMenu","onError","onAddFav","product","count","countInput","value","_this5","itemScope","itemType","react_modal_image_es","small","require","large","itemProp","new","react_router_dom","to","stock","price","onClick","onSubmit","e","preventDefault","style","justifyContent","name","required","placeholder","min","defaultValue","ref","input","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","clipboard","writeText","t0","error","stop","withRouter","connect","ownProps","obj","CardCarousel","array","nextProps","nextContext","card","Index","stocks","Helmet","charSet","property","Contact","react_yandex_maps_umd_production_min","defaultState","center","zoom","width","margin","height","geometry","coordinates","properties","iconContent","hintContent","preset","draggable","NewsList","date","Date","getDate","getMonth","getFullYear","ArticleList","articles","About","categories","ProductList","isFavorite","updateFav","products","favorites","viewCount","params","category","cat","search","substr","result","arr","filter","push","_this3","paddingBottom","Workshop","article","dangerouslySetInnerHTML","__html","replace","Catalog","Footer","CategoryList","open","splice","parts","pathname","split","children","history","changeState","data-toggle","aria-expanded","aria-controls","child","itemView","searchInCat","categorySearch","checked","htmlFor","Menu","menuItemRender","handleLogout","redirect","like","basket","leftItems","rightItems","permission","items","onDeleteUser","onDeleteToken","reload","onReloadedMenu","user","roles","Array","isArray","active","sub","aria-haspopup","handleGoTo","aria-labelledby","subItem","key2","backgroundColor","aria-label","Loading","AbstractForm","viewLoading","viewForm","loading","errors","LoginForm","handleSubmit","updateUser","grant_type","username","emailInput","password","passInput","client_id","client_secret","access_token","onAddToken","onAddUser","RegForm","test","alert","email","pass","confirmPass","cpassInput","fio","nameInput","phone","phoneInput","address","addressInput","minLength","ResetForm","PublicLayout","redirectUrl","nextState","updateFrom","menu","category_list","react_router","exact","component","render","register","reset_pass","from","login","react_scroll_up_button","footer","ProductUpdate","append","fileInput","files","NoImageList","add","edit","titleInput","contentInput","titleEditInput","contentEditInput","colSpan","accept","viewAdd","handleEdit","handleDelete","StocksList","ExportCategoryList","depth","str","i","handleExport","forEach","element","viewTr","p","onEditorStateChange","onEditorStateChangeE","editorState","EditorState","createEmpty","editorStateE","draftToHtml","convertToRaw","getCurrentContent","react_draft_wysiwyg","toolbarClassName","wrapperClassName","editorClassName","editorStyle","border","toolbar","initialContentState","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","PrivateLayout","Favorite","Basket","handleUpdate","sum","balance","onChange","target","PassChange","current_pass","opassInput","new_pass","confirm_pass","DataChange","OrderAdd","comment","commentInput","pay_type","maxLength","Orders","handleDuplicate","orders","order","Math","ceil","abs","updated","UserLayout","ErrorBoundary","hasError","info","Modal","context","modal","onClear","hide","tabIndex","aria-hidden","App","errorBoundary","admin_layout","private_layout","layout","loc","defaultData","combineReducers","routing","routerReducer","action","persistConfig","storage","persistedReducer","persistReducer","reducers","createStore","persistor","persistStore","r","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","react_redux__WEBPACK_IMPORTED_MODULE_2__","redux_persist_integration_react__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","jquery__WEBPACK_IMPORTED_MODULE_6__","jquery__WEBPACK_IMPORTED_MODULE_6___default","_reducers_store__WEBPACK_IMPORTED_MODULE_10__","_App__WEBPACK_IMPORTED_MODULE_11__","_serviceWorker__WEBPACK_IMPORTED_MODULE_12__","jQuery","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.abf9aece.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * Created by misha on 27.01.19.\n */\n//Dev\n// export let serverUrl = 'http://localhost:8000/api/';\n// export let regUrl = 'http://localhost:80/security/register';\n// export let loginUrl = 'http://localhost:80/oauth/v2/token';\n// export let serverImages = 'http://localhost:8000/uploads/images/';\n// export let clientId = '1_1hzr6danaq4kosc0gowcwgwss88o44s8gsoo40kgco88ocgkso';\n// export let clientSecret = '1tg914i7xtc0408wggosgs4gk4o0k8oso88884w4kgo8kc8kso';\n\n//Prod\nexport let serverUrl = 'https://api.universal.tom.ru/api/';\n// export let serverImages = 'https://api.compliance-expert.com/uploads/images/';\nexport let regUrl = 'https://api.universal.tom.ru/security/register';\nexport let resetUrl = 'https://api.universal.tom.ru/security/resetpassword/';\nexport let loginUrl = 'https://api.universal.tom.ru/oauth/v2/token';\nexport let clientId = '1_4ks7w5c3rmkgw00sckwow04c884w8wgw8kc48k8skw4g80s8k8';\nexport let clientSecret = '104knitpf57kgk80kks0g80gow8s0csw0g8g8cs4s0ggwg4c0w';","/**\n * Created by misha on 27.01.19.\n */\nimport { serverUrl } from '../services/parameters';\n\nexport default function request(\n    path = '',\n    method = 'GET',\n    data = {},\n    headers = {},\n    callback = null,\n    errorCallback = null\n) {\n    if (path.indexOf('http') === -1) {\n        path = serverUrl + path;\n    }\n\n\n    headers[\"Content-Type\"] = data instanceof FormData ? \"multipart/form-data\" : \"application/json\";\n    headers[\"Access-Control-Request-Headers\"] = \"*\";\n    headers[\"Access-Control-Request-Method\"] = \"*\";\n    headers[\"Access-Control-Allow-Origin\"] = \"*\";\n    if (window.store.store.getState().token !== false) {\n        headers[\"Authorization\"] = 'Bearer ' + window.store.store.getState().token;\n    }\n\n    let options = {\n        method: method,\n        mode: 'cors',\n        headers: headers,\n    };\n    if (method !== 'GET') options.body = data instanceof FormData ? data : JSON.stringify(data);\n\n    if (data instanceof FormData) {\n        options.headers = {\n            'Access-Control-Allow-Headers': window.location.hostname,\n            'Authorization': 'Bearer ' + window.store.store.getState().token,\n        };\n    }\n\n    fetch(path, options)\n        .then(processResponse)\n        .then(res => {\n            const { statusCode, data } = res;\n            switch (statusCode)\n            {\n                case 200:\n                    if (callback)\n                    {\n                        callback(data);\n                    }\n                    break;\n                case 400: case 500:\n                    window.store.store.dispatch({\n                        type: 'UPDATE_MODAL_DATA',\n                        payload: {\n                            show: true,\n                            title: 'Error ' + statusCode,\n                            content: data.error_description ? data.error_description : data.message,\n                            btnText: 'OK'\n                        },\n                    });\n                    if (errorCallback)\n                    {\n                        errorCallback(data);\n                    }\n                    break;\n                case 401:\n                    window.store.store.dispatch({\n                        type: 'DELETE_TOKEN',\n                        payload: {},\n                    });\n                    break;\n                default:\n                    console.log(\"statusCode\",statusCode);\n                    console.log(\"data\",data);\n            }\n        });\n}\n\nfunction processResponse(response) {\n    const statusCode = response.status;\n    const data = response.text();\n\n    return Promise.all([statusCode, data]).then(res => ({\n        statusCode: res[0],\n        data: (typeof (JSON.parse(res[1])) === 'object' ? JSON.parse(res[1]) : JSON.parse(JSON.parse(res[1]))),\n    }));\n}\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport request from \"../../../services/ajaxManager\";\n\nclass News extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            news: [],\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet();\n    }\n\n    componentDidMount() {\n        window.$('.carousel').carousel();\n    }\n\n    handleGet() {\n        let _this = this;\n        request(\n            'news/' + this.props.type,\n            'GET',\n            null,\n            {},\n            function (response) {\n                _this.setState({news: response});\n            },\n        );\n    }\n\n    render() {\n        return (\n            <div id={\"carouselExampleIndicators\" + this.props.type} className=\"carousel slide\" data-ride=\"carousel\">\n                <ol className=\"carousel-indicators\">\n                    {this.state.news.map((item, key) => {\n                        return (\n                            <li key={key} data-target={\"#carouselExampleIndicators\" + this.props.type} data-slide-to={key}\n                                className={key === 0 ? \"active\" : ''}></li>\n                        );\n                    })}\n                </ol>\n                <div className=\"carousel-inner\">\n                    {this.state.news.map((item, key) => {\n                        return (\n                            <div key={key} className={\"carousel-item \" + (key === 0 ? \"active\" : '')}>\n                                <img className=\"\" src={\"https://api.universal.tom.ru/uploads/news/\" + item.photo}\n                                     alt={(key + 1) + \" slide\"}/>\n                                <div className=\"carousel-caption d-none d-md-block\">\n                                    <h5 className={''}>{item.title}</h5>\n                                    <p className={''}>{item.short_content}</p>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n                <a className=\"carousel-control-prev\" href={\"#carouselExampleIndicators\" + this.props.type} role=\"button\"\n                   data-slide=\"prev\">\n                    <i className={'fa fa-arrow-left'}></i>\n                    <span className=\"sr-only\">Previous</span>\n                </a>\n                <a className=\"carousel-control-next\" href={\"#carouselExampleIndicators\" + this.props.type} role=\"button\"\n                   data-slide=\"next\">\n                    <i className={'fa fa-arrow-right'}></i>\n                    <span className=\"sr-only\">Next</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nexport default News;\n","import React, {Component} from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport request from \"../../../services/ajaxManager\";\nimport {connect} from \"react-redux\";\nimport ModalImage from \"react-modal-image\";\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleBasketAdd = this.handleBasketAdd.bind(this);\n\n        this.state = {\n            news: [],\n            form: true,\n        };\n    }\n    // componentWillMount() {\n    //     this.props.onResetFav([]);\n    // }\n\n    handleClick() {\n        if (!this.props.favorite) {\n            if (!this.props.token) {\n                this.props.onError({\n                    show: true,\n                    title: 'Необходимо войти в личный кабинет',\n                    content: 'Для добавления товара в избранное или корзину необходимо зарегистрироваться и войти в личный кабинет.',\n                    btnText: 'OK'\n                });\n            }\n            else {\n                let data = {\n                    id: this.props.item.id,\n                };\n\n                let _this = this;\n\n                request(\n                    'product/favorite',\n                    'POST',\n                    data,\n                    {},\n                    function (response)\n                    {\n                        _this.props.onAddFav(_this.props.item);\n                        _this.props.update(_this.props.item);\n                        _this.props.onReloadMenu();\n                    },\n                    this.state.errorCallback\n                );\n            }\n\n        }\n        else {\n            if (!this.props.token) {\n                this.props.onError({\n                    show: true,\n                    title: 'Необходимо войти в личный кабинет',\n                    content: 'Для добавления товара в избранное или корзину необходимо зарегистрироваться и войти в личный кабинет.',\n                    btnText: 'OK'\n                });\n            }\n            else {\n                let data = {\n                    id: this.props.item.id,\n                };\n\n                let _this = this;\n\n                request(\n                    'product/favorite',\n                    'DELETE',\n                    data,\n                    {},\n                    function (response)\n                    {\n                        _this.props.onRemoveFav(_this.props.item);\n                        _this.props.update(_this.props.item);\n                        _this.props.onReloadMenu();\n                    },\n                    this.state.errorCallback\n                );\n            }\n        }\n    }\n\n    handleBasketAdd() {\n        if (!this.props.token) {\n            this.props.onError({\n                show: true,\n                title: 'Необходимо войти в личный кабинет',\n                content: 'Для добавления товара в избранное или корзину необходимо зарегистрироваться и войти в личный кабинет.',\n                btnText: 'OK'\n            });\n        }\n        else {\n            let data = {\n                product: this.props.item.id,\n                count: this.countInput.value,\n            };\n\n            let _this = this;\n\n            request(\n                'product/basket',\n                'POST',\n                data,\n                {},\n                function (response) {\n                    _this.setState({message: response.message, form: false});\n                    _this.props.onReloadMenu();\n                },\n                this.state.errorCallback\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"card\"} itemScope itemType=\"http://schema.org/Product\">\n                <ModalImage\n                    small={this.props.item.photo === 'placeholder.jpg' ? require('../../../images/image-placeholder.png') : 'https://api.universal.tom.ru/uploads/products/' + this.props.item.photo}\n                    large={this.props.item.photo === 'placeholder.jpg' ? require('../../../images/image-placeholder.png') : 'https://api.universal.tom.ru/uploads/products/' + this.props.item.photo}\n                    alt={this.props.item.title}\n                    className=\"card-img-top card-img-top-250\"\n                />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\" itemProp=\"name\">{this.props.item.title}</h5>\n                    <p className=\"card-text\" itemProp=\"price\">\n                        <small className=\"text-muted\">Код товара: {this.props.item.id} </small> {this.props.item.new ? (<Link to={'/catalog/new'}><span className=\"badge badge-success\">Новинка!</span></Link>) : ''} {this.props.item.stock ? (<Link to={'/catalog/stock'}><span className=\"badge badge-danger\">Акция!</span></Link>) : ''}<br/>\n                        Цена: {this.props.item.price} р.\n                    </p>\n                    <p>\n                        <i className={'fa fa-heart' + (this.props.favorite ? ' text-danger' : '')}\n                           onClick={this.handleClick}> {this.props.favorite ? 'В избранном' : 'Добавить в избранное'}</i>\n                    </p>\n                    {this.state.form ?\n                        <form className=\"form-inline\" onSubmit={(e) => {e.preventDefault()}} style={{justifyContent: 'center'}}>\n                            <div className=\"input-group mb-2 mr-sm-2\">\n                                <input\n                                    name=\"desc\"\n                                    type=\"number\"\n                                    required={true}\n                                    placeholder={\"Количество:\"}\n                                    min={1}\n                                    defaultValue={1}\n                                    className=\"form-control mb-1 mr-sm-1\"\n                                    ref={(input) => {this.countInput = input}}\n                                />\n                                <div className=\"input-group-prepend\">\n                                    <button className=\"btn btn-success mb-1 \" onClick={this.handleBasketAdd}>\n                                        <i className={'fa fa-cart-plus'}></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </form> :\n                        <div className=\"alert alert-success\" role=\"alert\">\n                            <i className={'fa fa-check'}> {this.state.message}</i>\n                        </div>\n                    }\n                    <button className={'btn btn-secondary'} onClick={async () => {\n                        try {\n                            // 1) Copy text\n                            await navigator.clipboard.writeText('https://universal.tom.ru/catalog/search?q=' + this.props.item.id);\n\n                            // 2) Catch errors\n                        } catch (err) {\n                            console.error('Failed to copy: ', err);\n                        }\n                    }}>\n                        <i className={'fa fa-share'}> Скопировать ссылку на товар</i>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({\n        token: state.token,\n    }),\n    dispatch => ({\n        onAddFav: (id) => {\n            dispatch({ type: 'ADD_FAVORITE', payload: id })\n        },\n        onRemoveFav: (id) => {\n            dispatch({ type: 'REMOVE_FAVORITE', payload: id })\n        },\n        onError: (obj) => {\n            dispatch({ type: 'UPDATE_MODAL_DATA', payload: obj })\n        },\n        onReloadMenu: () => {\n            dispatch({ type: 'RELOAD', payload: true })\n        },\n    })\n)(Card));\n","import React, {Component} from 'react';\nimport {withRouter, Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport Card from \"./card\";\n\nclass CardCarousel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: this.props.array,\n        };\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        this.setState({array: nextProps.array});\n    }\n\n    componentDidMount() {\n        window.$('.carousel').carousel();\n    }\n\n    render() {\n        if (this.state.array.length > 0) {\n            return (\n                <div>\n                    <h2>{this.props.title}</h2>\n                    <div id={\"carouselExampleIndicators\" + this.props.title} className=\"carousel slide\" data-ride=\"carousel\">\n                        <div className=\"carousel-inner\">\n                            {this.state.array.map((item,key) => {\n                                return(\n                                    <div key={key} className={\"carousel-item height-auto \" + (key === 0 ? \"active\" : '')}>\n                                        <div className={'card-group'}>\n                                            <Card item={item} key={item.id} />\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                        <a className=\"carousel-control-prev\" href={\"#carouselExampleIndicators\" + this.props.title} role=\"button\" data-slide=\"prev\">\n                            <i className={'fa fa-arrow-left'}></i>\n                            <span className=\"sr-only\">Previous</span>\n                        </a>\n                        <a className=\"carousel-control-next\" href={\"#carouselExampleIndicators\" + this.props.title} role=\"button\" data-slide=\"next\">\n                            <i className={'fa fa-arrow-right'}></i>\n                            <span className=\"sr-only\">Next</span>\n                        </a>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <h5>{this.props.title}</h5>\n                <p>В данный момент товаров категории \"{this.props.title}\" нет!</p>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({}),\n    dispatch => ({})\n)(CardCarousel));\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Helmet} from \"react-helmet\";\n\nimport News from './parts/news';\nimport CardCarousel from './parts/cards_carousel';\nimport request from \"../../services/ajaxManager\";\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            news: [],\n            stocks: [],\n        }\n    }\n\n    componentWillMount() {\n        this.handleGet();\n    }\n\n    handleGet() {\n        let _this = this;\n\n        request(\n            'product/new',\n            'GET',\n            null,\n            {},\n            function (response) {\n                _this.setState({news: response});\n            },\n        );\n        request(\n            'product/stock',\n            'GET',\n            null,\n            {},\n            function (response) {\n                _this.setState({stocks: response});\n            },\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Helmet>\n                    <meta charSet=\"utf-8\"/>\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n                    <meta name=\"theme-color\" content=\"#000000\"/>\n                    <title>Главная - Универсал</title>\n                    <meta name=\"keywords\" content=\"купить хозтовары, хозяйственные товары, бытовые товары, хозяйственно-бытовые товары, товары для дома\"/>\n                    <meta name=\"description\" content=\"Товары для дома, хозяйственные товары, спец. одежда и многое другое!\"/>\n                    <meta property=\"og:description\" content=\"Множество товаров для дома, хозяйства, авто и многого другого!\"/>\n                    <meta property=\"og:title\" content=\"Главная\"/>\n                    <meta property=\"og:url\" content=\"https://universal.tom.ru/\"/>\n                </Helmet>\n                <h3 className=\"text-center\">Новости</h3>\n                <News type=\"news\"/>\n                <br/>\n                <h3 className=\"text-center\">Акции</h3>\n                <News type=\"stocks\"/>\n                <br/>\n            </div>\n        );\n    }\n}\n\nexport default Index;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport { YMaps, Map, GeoObject, GeolocationControl, SearchControl, ZoomControl } from 'react-yandex-maps';\nimport {Helmet} from \"react-helmet\";\n\nclass Contact extends Component {\n    render() {\n        return (\n            <div itemScope itemType=\"http://schema.org/Organization\">\n                <Helmet>\n                    <meta charSet=\"utf-8\"/>\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n                    <meta name=\"theme-color\" content=\"#000000\"/>\n                    <title>Контакты - Универсал</title>\n                    <meta name=\"keywords\" content=\"купить хозтовары, хозяйственные товары, бытовые товары, хозяйственно-бытовые товары, товары для дома\"/>\n                    <meta name=\"description\" content=\"Товары для дома, хозяйственные товары, спец. одежда и многое другое!\"/>\n                    <meta property=\"og:description\" content=\"Множество товаров для дома, хозяйства, авто и многого другого!\"/>\n                    <meta property=\"og:title\" content=\"Контакты\"/>\n                    <meta property=\"og:url\" content=\"https://universal.tom.ru/contact\"/>\n                </Helmet>\n                <h1>Контакты</h1>\n                <p className={'text-left'}>\n                    <i className={'fa fa-map-marker'}> <span itemProp=\"streetAddress\">Адрес: г. Томск, ул. Бердская, 31 (пер. Пойменный 5)</span></i><br/>\n                    <i className={'fa fa-phone'}> <span><a href={'tel:+7 (3822) 909291'} itemProp=\"telephone\">90-92-91</a>, <a href={'tel:+7 (3822) 90-44-32'} itemProp=\"telephone\">90-44-32</a>, <a href={'tel:+7 (3822) 902-668'} itemProp=\"telephone\">902-668</a></span></i><br/>\n                    <i className={'fa fa-envelope'}> <span><a href=\"mailto:razov@mail.tomsknet.ru\" itemProp=\"email\">razov@mail.tomsknet.ru</a></span></i>\n                </p>\n\n                <h3>О компании</h3>\n                <p className={'text-left'}>\n                    Основным направлением нашей деятельности является оптовая торговля товарами народного потребления: посуда, хозяйственные товары, инструменты. Наша цель - предоставление качественных товаров широкого ассортимента по разумным ценам.<br/><br/>\n                    Большое количество товарных групп, низкие цены, взаимовыгодные условия работы, внимательное отношение к покупателям способствует росту и развитию компании.<br/><br/>\n                    Мы не собираемся останавливаться на достигнутом, постоянно совершенствуем наши знания и опыт, расширяя ассортимент предлагаемых товаров.<br/><br/>\n                    Приглашаем к сотрудничеству!\n                </p>\n                <br/>\n                <hr/>\n                <br/>\n                <YMaps>\n                    <div className={'map'}>\n                        <Map defaultState={{ center: [56.51271706822828,84.94996649999996], zoom: 16 }}\n                             style={{width: '80%', margin: '0 auto', height: '80vh'}}>\n                            <GeolocationControl/>\n                            <SearchControl/>\n                            <ZoomControl/>\n                            <GeoObject\n                                // The geometry description.\n                                geometry={{\n                                    type: 'Point',\n                                    coordinates: [56.51271706822828,84.94996649999996],\n                                }}\n                                // Properties.\n                                properties={{\n                                    // The placemark content.\n                                    iconContent: 'Мы здесь',\n                                    hintContent: 'ООО \"Компания Универсал\"',\n                                }}\n                                // Options.\n                                options={{\n                                    // The placemark's icon will stretch to fit its contents.\n                                    preset: 'islands#blackStretchyIcon',\n                                    // The placemark can be moved.\n                                    draggable: false,\n                                }}\n                            />\n                        </Map>\n\n                    </div>\n                </YMaps>\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport request from \"../../services/ajaxManager\";\nimport {Helmet} from \"react-helmet\";\n\nclass NewsList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            news: [],\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet();\n    }\n\n    handleGet()\n    {\n        let _this = this;\n        request(\n            'news/news',\n            'GET',\n            null,\n            {},\n            function (response)\n            {\n                _this.setState({news: response});\n            },\n        );\n    }\n\n    render() {\n        return (\n            <div itemScope itemType=\"http://schema.org/NewsArticle\">\n                <Helmet>\n                    <meta charSet=\"utf-8\"/>\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n                    <meta name=\"theme-color\" content=\"#000000\"/>\n                    <title>Новости - Универсал</title>\n                    <meta name=\"keywords\" content=\"купить хозтовары, хозяйственные товары, бытовые товары, хозяйственно-бытовые товары, товары для дома\"/>\n                    <meta name=\"description\" content=\"Новости ООО 'Универсал Томск'\"/>\n                    <meta property=\"og:description\" content=\"Новости ООО 'Универсал Томск'\"/>\n                    <meta property=\"og:title\" content=\"Новости\"/>\n                    <meta property=\"og:url\" content=\"https://universal.tom.ru/news\"/>\n                </Helmet>\n                <h1>Новости</h1>\n                {this.state.news.map((item, key) => {\n                    let date = new Date(item.date);\n                    return(\n                        <div key={key} className={'row news'}>\n                            <div className={'col-md-3'}>\n                                <img itemProp=\"image\" className={'newsImage'} alt={'image'} src={'https://api.universal.tom.ru/uploads/news/' + item.photo}/>\n                            </div>\n                            <div className={'col-md-9'}>\n                                <h5 className={'text-left'} itemProp=\"headline\">{item.title}</h5>\n                                <p className={'text-left'} itemProp=\"articleBody\">{item.short_content}</p>\n                                <p className={'text-right'}>\n                                    <small  itemProp=\"dateline\">{date.getDate()}/{date.getMonth() + 1}/{date.getFullYear()}</small>\n                                </p>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default NewsList;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport request from \"../../../services/ajaxManager\";\nimport {Helmet} from \"react-helmet\";\n\nclass ArticleList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            articles: [],\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet();\n    }\n\n    handleGet()\n    {\n        let _this = this;\n        request(\n            'article/',\n            'GET',\n            null,\n            {},\n            function (response)\n            {\n                _this.setState({articles: response});\n            },\n        );\n    }\n\n    render() {\n        return (\n            <div itemScope itemType=\"http://schema.org/ItemList\">\n                <Helmet>\n                    <meta charSet=\"utf-8\"/>\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n                    <meta name=\"theme-color\" content=\"#000000\"/>\n                    <title>Швейный цех - Универсал</title>\n                    <meta name=\"keywords\" content=\"купить хозтовары, хозяйственные товары, бытовые товары, хозяйственно-бытовые товары, товары для дома\"/>\n                    <meta name=\"description\" content=\"Товары для дома, хозяйственные товары, спец. одежда и многое другое! Изготовление на заказ. Низкие цены.\"/>\n                    <meta property=\"og:description\" content=\"Множество товаров для дома, хозяйства, авто и многого другого! Изготовление на заказ. Низкие цены.\"/>\n                    <meta property=\"og:title\" content=\"Швейный цех\"/>\n                    <meta property=\"og:url\" content=\"https://universal.tom.ru/workshop\"/>\n                </Helmet>\n                <h1 itemProp=\"headline\">Швейный цех</h1>\n                <ul>\n                {this.state.articles.map((item, key) => {\n                    return(\n                        <li itemProp=\"itemListElement\" key={key} className={'text-left'}>\n                            <Link to={'/workshop/' + item.id}>{item.title}</Link>\n                        </li>\n                    );\n                })}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default ArticleList;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport request from \"../../services/ajaxManager\";\n\nclass About extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            categories: [],\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet();\n    }\n\n    handleGet()\n    {\n        let _this = this;\n        request(\n            'product/categories',\n            'GET',\n            null,\n            {},\n            function (response)\n            {\n                _this.setState({categories: response});\n            },\n        );\n    }\n\n    render() {\n        return (\n            <div>\n\n                <br/>\n                <h2>Все это можно приобрести в нашей компании:</h2>\n                <ul className={'text-left'}>\n                    {this.state.categories.map((item, key) => {\n                        return (\n                            <li key={key}>\n                                <Link to={'/catalog/' + item.id}>{item.title}</Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default About;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport request from \"../../services/ajaxManager\";\nimport {connect} from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport {Helmet} from \"react-helmet\";\n\nimport Card from './parts/card';\n\nclass ProductList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.isFavorite = this.isFavorite.bind(this);\n        this.updateFav= this.updateFav.bind(this);\n\n        this.state = {\n            products: [],\n            favorites: [],\n            viewCount: 30,\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet(this.props.match.params.category);\n\n        if (this.props.token !== false) {\n\n            let _this = this;\n            request(\n                'product/favorite',\n                'GET',\n                null,\n                {},\n                function (response) {\n                    _this.setState({favorites: response});\n                },\n            );\n        }\n    }\n\n    componentWillReceiveProps(props) {\n        this.setState({viewCount: 30});\n        this.handleGet(props.match.params.category);\n    }\n\n    handleGet(cat)\n    {\n        let _this = this;\n        if (cat === 'search') {\n            request(\n                'product/search',\n                'POST',\n                {data: this.props.location.search.substr(3)},\n                {},\n                function (response) {\n                    _this.setState({products: response});\n                },\n            );\n        }\n        else {\n            request(\n                'product/' + cat + (this.props.match.params.search ? '?data=' + this.props.match.params.search : ''),\n                'GET',\n                null,\n                {},\n                function (response) {\n                    _this.setState({products: response});\n                },\n            );\n        }\n    }\n\n    updateFav(obj) {\n        let arr = this.state.favorites;\n        let result;\n\n        if (this.isFavorite(obj)) {\n            result =  this.state.favorites.filter(item => {\n                return obj.id !== item.id;\n            });\n        }\n        else {\n            result = arr;\n            result.push(obj);\n        }\n\n        this.setState({favorites: result});\n    }\n\n    isFavorite(obj) {\n        let result =  this.state.favorites.filter(item => {\n            return obj.id === item.id;\n        });\n\n        return result.length > 0;\n    }\n\n    render() {\n        return (\n            <div>\n                <Helmet>\n                    <meta charSet=\"utf-8\"/>\n                    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"/>\n                    <meta name=\"theme-color\" content=\"#000000\"/>\n                    <title>Каталог - Универсал</title>\n                    <meta name=\"keywords\" content=\"купить хозтовары, хозяйственные товары, бытовые товары, хозяйственно-бытовые товары, товары для дома\"/>\n                    <meta name=\"description\" content=\"Товары для дома, хозяйственные товары, спец. одежда и многое другое!\"/>\n                    <meta property=\"og:description\" content=\"Множество товаров для дома, хозяйства, авто и многого другого!\"/>\n                    <meta property=\"og:title\" content=\"Каталог\"/>\n                    <meta property=\"og:url\" content=\"https://universal.tom.ru/catalog/*\"/>\n                </Helmet>\n                <h1>Товары:</h1>\n                <div className=\"row\">\n                    {this.state.products.length > 0 ? this.state.products.map((item, key) => {\n                        if (key < this.state.viewCount) {\n                            return (\n                                <div className=\"col-md-4\" style={{paddingBottom: '10px'}}>\n                                    <Card item={item} key={item.id} update={this.updateFav}\n                                          favorite={this.isFavorite(item) ? true : false}/>\n                                </div>\n                            );\n                        }\n                        else {\n                            return;\n                        }\n                    }) : <p className={'text-center'}>Товары не найдены</p>}\n                </div>\n                { this.state.viewCount < this.state.products.length ?\n                    <button className={'btn btn-success'}\n                            onClick={() => {this.setState({viewCount: (this.state.viewCount + 30)})}}>\n                        <i className={'fa fa-cloud-download-alt'}> <span>Загрузить еще</span></i>\n                    </button> : null }\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({\n        token: state.token,\n    }),\n    dispatch => ({})\n)(ProductList));\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport request from \"../../../services/ajaxManager\";\nimport {connect} from \"react-redux\";\nimport { withRouter } from \"react-router\";\n\nclass Workshop extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            article: null,\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet(this.props.match.params.id);\n    }\n\n    componentWillReceiveProps(props) {\n        this.handleGet(props.match.params.id);\n    }\n\n    handleGet(cat)\n    {\n        let _this = this;\n        request(\n            'article/' + cat,\n            'GET',\n            null,\n            {},\n            function (response)\n            {\n                _this.setState({article: response});\n            },\n        );\n    }\n\n    render() {\n        return (\n            <div itemScope itemType=\"http://schema.org/Article\">\n                <h1 itemProp=\"headline\">{this.state.article ? this.state.article.title : ''}</h1>\n                <div itemProp=\"articleBody\" dangerouslySetInnerHTML={{ __html: this.state.article ? (this.state.article.content).replace(/font-family\\:[^;]+;?/g, '') : ''}}></div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({\n        token: state.token,\n    }),\n    dispatch => ({})\n)(Workshop));\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport request from \"../../services/ajaxManager\";\n\nclass Catalog extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            categories: [],\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet();\n    }\n\n    handleGet()\n    {\n        let _this = this;\n        request(\n            'product/categories',\n            'GET',\n            null,\n            {},\n            function (response)\n            {\n                _this.setState({categories: response});\n            },\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Каталог</h1>\n                <ul className={'text-left'}>\n                    {this.state.categories.map((item, key) => {\n                        return (\n                            <li key={key}>\n                                <Link to={'/catalog/' + item.id}>{item.title}</Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Catalog;\n","import React, {Component} from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className='footer'>\n                <hr/>\n                <p>ООО \"Универсал Томск\"</p>\n                <p>\n                    <a href='https://vladimirov-mv.name'>Сайт разработан командой \"Unicorn Project\"</a>\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Footer;\n","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport request from \"../../../services/ajaxManager\";\nimport {connect} from \"react-redux\";\n\nclass CategoryList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            categories: [],\n            open: [],\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet();\n    }\n\n    handleGet() {\n        let _this = this;\n        request(\n            'product/categories',\n            'GET',\n            null,\n            {},\n            function (response) {\n                _this.setState({categories: response});\n            },\n        );\n    }\n\n    changeState(id) {\n        let arr = this.state.open;\n        if (arr.indexOf(id) === -1) {\n            arr.push(id);\n        } else {\n            arr.splice(arr.indexOf(id), 1);\n        }\n\n        this.setState({open: arr});\n    }\n\n    itemView(item, type = null) {\n        let parts = window.location.pathname.split('/');\n        if (item.children.length > 0) {\n            return (\n                <div key={item.id} className={'text-left'}>\n                    <a href={\"#collapseExample\" + item.id}\n                       className={'alert-link ' + (window.location.pathname === ('/catalog/' + item.id) || (parts[1] === 'catalog' && parts[2] == item.id) ? ' active' : '')}\n                       onClick={() => {\n                           this.props.history.push('/catalog/' + item.id);\n                           this.changeState(item.id);\n                       }}\n                       data-toggle=\"collapse\"\n                       role=\"button\"\n                       aria-expanded=\"false\"\n                       aria-controls={\"collapseExample\" + item.id}>\n                        <span><i>{item.title}</i></span>\n                    </a>\n                    <div className=\"collapse\" id={\"collapseExample\" + item.id}>\n                        <div className=\" card-body\">\n                            {item.children.map((child) => {\n                                return (\n                                    this.itemView(child)\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div key={item.id} className={'text-left'}>\n                <Link to={'/catalog/' + item.id}\n                      className={'alert-link' + (window.location.pathname === ('/catalog/' + item.id) || (parts[1] === 'catalog' && parts[2] == item.id) ? ' active' : '')}>\n                    {type !== 'bold' ? <span><i>{item.title}</i></span> : <b><i><span>{item.title}</span></i></b>}\n                </Link>\n            </div>\n        );\n    }\n\n    render() {\n        let parts = window.location.pathname.split('/');\n\n        return (\n            <div className=\"alert alert-success\">\n                <form onSubmit={(e) => {\n                    e.preventDefault();\n                    if (this.state.searchInCat) {\n                        this.props.history.push('/' + parts[1] + '/' + parts[2] + '/' + this.search.value);\n                    } else {\n                        this.props.history.push('/catalog/search?q=' + this.search.value);\n                    }\n                }}>\n                    <div className=\"input-group mb-2\">\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               id=\"inlineFormInputGroup\"\n                               ref={(input) => this.search = input}\n                               defaultValue={(parts[1] === 'catalog' && parts.length > 3) ? parts[3] : ''}\n                               placeholder=\"Поиск\"/>\n                        <div className=\"input-group-prepend\">\n                            <div className=\"input-group-text btn btn-success\" onClick={() => {\n                                if (this.state.searchInCat) {\n                                    this.props.history.push('/' + parts[1] + '/' + parts[2] + '/' + this.search.value);\n                                } else {\n                                    this.props.history.push('/catalog/search?q=' + this.search.value);\n                                }\n                            }}>\n                                <i className={'fa fa-search'}></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-check mb-2 mr-sm-2\">\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineFormCheck\"\n                               ref={(input) => this.categorySearch = input}\n                               onClick={() => {\n                                   this.setState({searchInCat: this.categorySearch.checked})\n                               }}/>\n                        <label className=\"form-check-label\" htmlFor=\"inlineFormCheck\">\n                            Искать внутри выбранной категории\n                        </label>\n                    </div>\n                </form>\n                {this.itemView({id: 'new', children: [], title: 'Новые товары'}, 'bold')}\n                {this.itemView({id: 'stock', children: [], title: 'Товары по акции'}, 'bold')}\n                <hr/>\n                {this.state.categories.map((item) => {\n                    return (\n                        this.itemView(item)\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({\n        token: state.token\n    }),\n    dispatch => ({})\n)(CategoryList));\n","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport request from \"../services/ajaxManager\";\n\nclass Menu extends Component {\n    constructor(props) {\n        super(props);\n\n        this.menuItemRender = this.menuItemRender.bind(this);\n        this.handleGet = this.handleGet.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n\n        this.state = {\n            redirect: null,\n            like: [],\n            basket: [],\n            leftItems: [\n                {title: 'Главная', path: '/'},\n                {title: 'Новости', path: '/news'},\n                {title: 'Швейный цех', path: '/workshop'},\n                {title: 'Контакты', path: '/contact'},\n            ],\n            rightItems: [\n                {\n                    title: 'Админка', permission: 'admin', items: [\n                        {title: 'Обновление товаров', path: '/admin/product/update'},\n                        {title: 'Список товаров без изображения', path: '/admin/product/image'},\n                        {title: 'Управление швейным цехом', path: '/admin/workshop'},\n                        {title: 'Управление новостями', path: '/admin/news'},\n                        {title: 'Управление акциями', path: '/admin/stocks'},\n                        {title: 'Экспорт данных', path: '/admin/export'},\n                    ]\n                },\n                {\n                    title: 'Профиль', items: [\n                        {title: 'Корзина', path: '/user/basket'},\n                        {title: 'Избранное', path: '/user/favorite'},\n                        {title: 'Мои заказы', path: '/user/order'},\n                        {title: 'Изменить данные', path: '/user/data/change'},\n                        {title: 'Изменить пароль', path: '/user/password/change'},\n                    ]\n                },\n            ],\n        }\n    };\n\n    componentDidMount() {\n        this.handleGet();\n    }\n\n    handleLogout() {\n        this.props.onDeleteUser();\n        this.props.onDeleteToken();\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if (nextProps.reload.reload) {\n            nextProps.onReloadedMenu();\n            this.handleGet();\n        }\n    }\n\n    handleGet() {\n        let _this = this;\n\n        if (this.props.token) {\n            request(\n                'product/basket',\n                'GET',\n                null,\n                {},\n                function (response)\n                {\n                    _this.setState({basket: response});\n                },\n            );\n\n            request(\n                'product/favorite',\n                'GET',\n                null,\n                {},\n                function (response)\n                {\n                    _this.setState({like: response});\n                },\n            );\n        }\n    }\n\n    menuItemRender(item, key) {\n        if (item.permission === undefined || (item.permission == 'admin' && this.props.user.roles && this.props.user.roles.indexOf('ROLE_ADMIN') !== -1)) {\n            if (Array.isArray(item.items)) {\n                let active = false;\n                item.items.map((sub) => {\n                    if (sub.path === window.location.pathname) {\n                        active = true;\n                    }\n                });\n                if (item.path) {\n                    return (\n                        <li className={\"nav-item dropdown\" + (active ? ' active' : '')} key={key}>\n                            <a href=\"#\" className=\"nav-link dropdown-toggle\" id={\"navbarDropdown\" + key}\n                               role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                               onClick={() => this.handleGoTo(item.path)}>\n                                {item.title}\n                            </a>\n                            <div className=\"dropdown-menu\" aria-labelledby={\"navbarDropdown\" + key}>\n                                {item.items.map((subItem, key2) => {\n                                    return (\n                                        <a\n                                            className={\"dropdown-item\" + (subItem.path === window.location.pathname ? ' active' : '')}\n                                            href={item.path + subItem.path} key={key2}>{subItem.title}</a>\n                                    );\n                                })}\n                            </div>\n                        </li>\n                    );\n                }\n\n                return (\n                    <li className={\"nav-item dropdown\" + (active ? ' active' : '')} key={key}>\n                        <a className=\"nav-link dropdown-toggle\" href='#' id={\"navbarDropdown\" + key} role=\"button\"\n                           data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            {item.title}\n                        </a>\n                        <div className=\"dropdown-menu\" aria-labelledby={\"navbarDropdown\" + key}>\n                            {item.items.map((subItem, key2) => {\n                                return (\n                                    <Link\n                                        className={\"dropdown-item\" + (subItem.path === window.location.pathname ? ' active' : '')}\n                                        to={subItem.path} key={key2}>{subItem.title}</Link>\n                                );\n                            })}\n                        </div>\n                    </li>\n                );\n            }\n\n            return (\n                <li key={key} className={\"nav-item\" + (item.path === window.location.pathname ? ' active' : '')}>\n                    <Link className=\"nav-link\" to={item.path}>{item.title}</Link>\n                </li>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='mainImage'>\n                    <div className=\"row\">\n                        <div className=\"col-md-4\">\n                            <p className={'text-left'}>\n                                <i className={'fa fa-map-marker'}> <span itemProp=\"streetAddress\">Адрес: г. Томск, ул. Бердская, 31 (пер. Пойменный 5)</span></i><br/>\n                                <i className={'fa fa-phone'}> <span><a href={'tel:+7 (3822) 909291'} itemProp=\"telephone\">90-92-91</a>, <a href={'tel:+7 (3822) 90-44-32'} itemProp=\"telephone\">90-44-32</a>, <a href={'tel:+7 (3822) 902-668'} itemProp=\"telephone\">902-668</a></span></i><br/>\n                            </p>\n                        </div>\n                        <div className=\"col-md-4\">\n                            <Link to=\"/\"><h1 className=\"text-center\">Универсал Томск</h1></Link>\n                        </div>\n                        <div className=\"col-md-4 text-right\">\n                            <p>\n                            { this.props.token ?\n                                    <Link to='/user/basket' className=\"iconButtons\">\n                                        <i className={'fa fa-shopping-cart'}> </i>&nbsp;\n                                        <span className={'inRound'}>{this.state.basket.length}</span>\n                                    </Link>\n                                 : '' }\n                            { this.props.token ?\n                                    <Link to='/user/favorite' className=\"iconButtons\">\n                                        <i className={'fa fa-heart'}> </i>&nbsp;\n                                        <span className={'inRound'}>{this.state.like.length}</span>\n                                    </Link>\n                                 : '' }\n                            </p>\n                        </div>\n                    </div>\n                    {/*<img alt='main' src={require('../images/logo-min.png')} />*/}\n                </div>\n                <nav className=\"navbar navbar-dark navbar-expand-lg fixed\" style={{backgroundColor: '#28a745'}}>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <i className=\"navbar-toggler-icon\"></i>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            {this.state.leftItems.map((item, key) => {\n                                return this.menuItemRender(item, key);\n                            })}\n                        </ul>\n\n                        <ul className=\"navbar-nav ml-auto\">\n                            { this.props.token ? (\n                                    this.state.rightItems.map((item, key) => {\n                                        return this.menuItemRender(item, key)\n                                    })\n                                ) : '' }\n                            { this.props.token ? (\n                                    <li className=\"nav-item\">\n                                        <a href='#' className=\"nav-link\" onClick={this.handleLogout}>Выход</a>\n                                    </li> ) : <li className={\"nav-item\" + ('/login' === window.location.pathname ? ' active' : '')}>\n                                        <Link className=\"nav-link\" to={'/login'}>Войти</Link>\n                                    </li> }\n                            { this.props.token ? '' : <li className={\"nav-item\" + ('/register' === window.location.pathname ? ' active' : '')}>\n                                <Link className=\"nav-link\" to={'/register'}>Регистрация</Link>\n                            </li> }\n                        </ul>\n                    </div>\n                </nav>\n                <div style={{height: \"56px\"}}></div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state) => ({\n        token: state.token,\n        user: state.user,\n        reload: state.reload,\n    }),\n    dispatch => ({\n        onDeleteToken: (token) => {\n            dispatch({type: 'DELETE_TOKEN', payload: token})\n        },\n        onDeleteUser: (user) => {\n            dispatch({type: 'DELETE_USER', payload: user})\n        },\n        onReloadedMenu: () => {\n            dispatch({ type: 'RELOADED', payload: true })\n        },\n    })\n)(Menu));\n","/**\n * Created by misha on 27.01.19.\n */\n/**\n * Created by misha on 27.01.19.\n */\nimport React, {Component} from 'react';\n\nclass Loading extends Component {\n    render() {\n        return(\n            <div className=\"loadingBlock\">\n                <div>\n                    <img src={require('../images/loading.gif')} alt=\"loading...\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Loading;","import React, { Component } from 'react';\n\nimport Loading from '../loading';\n\nimport request from '../../services/ajaxManager';\n\nclass AbstractForm extends Component {\n    constructor(props)\n    {\n        super(props);\n\n        this.viewLoading = this.viewLoading.bind(this);\n        this.viewForm = this.viewForm.bind(this);\n\n        let errorCallback = (data) => {\n            this.setState({loading: false});\n        };\n\n        this.state = {\n            loading: false,\n            errors: [],\n            request: request,\n            errorCallback: errorCallback,\n        };\n    }\n\n    viewForm() {return '...'}\n\n    viewLoading()\n    {\n        return (\n           <Loading/>\n        );\n    }\n\n    render()\n    {\n        if(this.state.loading)\n        {\n            return this.viewLoading();\n        }\n        else\n        {\n            return this.viewForm();\n        }\n    }\n}\n\nexport default AbstractForm;\n","/**\n * Created by misha on 27.01.19.\n */\nimport React from 'react';\nimport AbstractForm from '../../abstract/form';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { loginUrl, clientId, clientSecret } from '../../../services/parameters';\nimport request from \"../../../services/ajaxManager\";\n\nclass LoginForm extends AbstractForm {\n    constructor(props)\n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.updateUser = this.updateUser.bind(this);\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        this.setState({loading: true});\n\n        let _this = this;\n        let data = {\n            'grant_type': 'password',\n            'username': this.emailInput.value,\n            'password': this.passInput.value,\n            'client_id': clientId,\n            'client_secret': clientSecret,\n        };\n\n        this.state.request(\n            loginUrl,\n            'POST',\n            data,\n            {},\n            function (response)\n            {\n                _this.updateUser(response.access_token, () => _this.props.onAddToken(response.access_token));\n            },\n            this.state.errorCallback\n        );\n    }\n\n    updateUser(token, callback)\n    {\n        let _this = this;\n\n        request(\n            'user/get',\n            'GET',\n            null,\n            {\"Authorization\": 'Bearer ' + token},\n            function (response)\n            {\n                _this.props.onAddUser(response);\n                callback();\n            },\n            this.state.errorCallback\n        );\n    }\n\n    viewForm() {\n        return (\n            <div className=\"w-75\">\n                <h4 className=\"text-center\">Войти</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        name=\"email\"\n                        type=\"email\"\n                        required={true}\n                        placeholder={\"E-mail:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.emailInput = input}}\n                    />\n                    <input\n                        name=\"pass\"\n                        type=\"password\"\n                        required={true}\n                        placeholder={\"Пароль:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.passInput = input}}\n                    />\n                    <br/>\n                    <p className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-success\">\n                            <i className={'fa fa-sign-in'}> <span>Войти</span></i>\n                        </button>\n                    </p>\n                </form>\n                <Link to={'/password/reset'}>Восстановить пароль</Link>\n                <br/><br/>\n                <Link to={'/register'} className=\"btn btn-primary\">\n                    <i className={'fa fa-user-plus'}> <span>Регистрация</span></i>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    state => ({\n        store: state,\n    }),\n    dispatch => ({\n        onAddToken: (token) => {\n            dispatch({ type: 'ADD_TOKEN', payload: token })\n        },\n        onAddUser: (user) => {\n            dispatch({ type: 'ADD_USER', payload: user })\n        },\n    })\n)(LoginForm));","/**\n * Created by misha on 27.01.19.\n */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AbstractForm from '../../abstract/form';\n\nimport { regUrl } from '../../../services/parameters';\nimport {Link} from \"react-router-dom\";\n\nclass RegForm extends AbstractForm {\n    constructor(props)\n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        this.setState({loading: true});\n\n        let re = /^\\w+([\\\\.-]?\\w+?-{0,4})*@\\w+([\\\\.-]?\\w+)*(\\.\\w{2,6})+$/;\n        if (!re.test(this.emailInput.value))\n        {\n            alert('Поле \"E-mail\" заполненно некорректно'); //TODO: Выводить пользователю это\n            this.setState({loading: false});\n            return;\n        }\n\n        let _this = this;\n        let data = {\n            email: this.emailInput.value,\n            pass: this.passInput.value,\n            confirmPass: this.cpassInput.value,\n            fio: this.nameInput.value,\n            phone: this.phoneInput.value,\n            address: this.addressInput.value,\n        };\n\n        this.state.request(regUrl, 'POST', data, {},\n            function() {\n                const {history} = _this.props;\n                history.push('/login');\n            }\n        );\n    }\n\n    viewForm() {\n        return (\n            <div className=\"\">\n                <h4 className=\"text-center\">Регистрация</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        name=\"email\"\n                        type=\"email\"\n                        required={true}\n                        placeholder={\"E-mail:*\"}\n                        minLength={5}\n                        className={'form-control '}\n                        ref={(input) => {this.emailInput = input}}\n                    />\n                    <input\n                        name=\"fio\"\n                        type=\"text\"\n                        required={true}\n                        placeholder={\"Имя:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.nameInput = input}}\n                    />\n                    <input\n                        name=\"sname\"\n                        type=\"text\"\n                        required={true}\n                        placeholder={\"Телефон:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.phoneInput = input}}\n                    />\n                    <input\n                        name=\"fname\"\n                        type=\"text\"\n                        required={true}\n                        placeholder={\"Адрес:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.addressInput = input}}\n                    />\n                    <input\n                        name=\"pass\"\n                        type=\"password\"\n                        required={true}\n                        placeholder={\"Пароль:*\"}\n                        minLength={6}\n                        className={'form-control '}\n                        ref={(input) => {this.passInput = input}}\n                    />\n                    <input\n                        name=\"cpass\"\n                        type=\"password\"\n                        required={true}\n                        placeholder={\"Еще пароль:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.cpassInput = input}}\n                    />\n                    <br/>\n                    <p className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-success\">\n                            <i className={'fa fa-user-plus'}> <span>Зарегистрироваться</span></i>\n                        </button>\n                    </p>\n                </form>\n                <Link to={'/login'} className=\"btn btn-primary\">\n                    <i className={'fa fa-sign-in'}> <span>Вход</span></i>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({\n\n    }),\n    dispatch => ({})\n)(RegForm));","/**\n * Created by misha on 27.01.19.\n */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AbstractForm from '../../abstract/form';\n\nimport { resetUrl } from '../../../services/parameters';\nimport {Link} from \"react-router-dom\";\n\nclass ResetForm extends AbstractForm {\n    constructor(props)\n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        this.setState({loading: true});\n\n        let _this = this;\n\n        this.state.request(\n            resetUrl + this.emailInput.value,\n            'GET',\n            {},\n            {},\n            function() {\n                _this.setState({message: true, loading: false});\n            },\n            function () {\n                _this.setState({loading: false});\n            },\n        );\n    }\n\n    viewForm() {\n        if (!this.state.message) {\n            return (\n                <div className=\"\">\n                    <h4 className=\"text-center\">Восстановить пароль</h4>\n                    <form onSubmit={this.handleSubmit}>\n                        <input\n                            name=\"email\"\n                            type=\"email\"\n                            required={true}\n                            placeholder={\"E-mail:*\"}\n                            minLength={5}\n                            className={'form-control '}\n                            ref={(input) => {\n                                this.emailInput = input\n                            }}\n                        />\n                        <br/>\n                        <p className=\"text-center\">\n                            <button type=\"submit\" className=\"btn btn-success\">\n                                <i className={'fa fa-key'}> <span>Восстановить</span></i>\n                            </button>\n                        </p>\n                    </form>\n                    <Link to={'/login'} className=\"btn btn-primary\">\n                        <i className={'fa fa-sign-in'}> <span>Вход</span></i>\n                    </Link>\n                </div>\n            );\n        }\n        else {\n            return(\n                <div>\n                    <div className=\"alert alert-success\" role=\"alert\">\n                        <i className={'fa fa-check'}> Проверьте пожалуйста почту. Вам выслана ссылка для восстановления пароля.<br/>\n                        Если письма нет, проверьте пожалуйста в спаме.</i>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({\n\n    }),\n    dispatch => ({})\n)(ResetForm));","/**\n * Created by misha on 27.01.19.\n */\nimport React, { Component } from 'react';\nimport { Route, Redirect, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\n\nimport Index from './index';\nimport Contact from './contacts';\nimport NewsList from './news_list';\nimport ArticleList from './workshop/workshop_list';\nimport About from './about';\nimport ProductList from './product_list';\nimport Workshop from './workshop/workshop';\nimport Catalog from './catalog';\nimport Footer from './footer';\nimport CategoryList from './parts/category_list';\nimport Menu from '../menu';\nimport LoginForm from './sign_action/login';\nimport RegForm from './sign_action/register';\nimport ResetForm from './sign_action/reset_pass';\n\nclass PublicLayout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectUrl: '/',\n        };\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if (this.props.location.pathname !== nextProps.location.pathname) {\n            this.props.updateFrom(this.props.location.pathname);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Menu />\n                <div className=\"content row\">\n                    <div className='col-md-3'>\n                        <CategoryList/>\n                    </div>\n                    <div className='col-md-9'>\n                        <Switch>\n                            <Route exact path={'/'} component={Index}/>\n                            <Route exact path={'/contact'} component={Contact}/>\n                            <Route exact path={'/news'} component={NewsList}/>\n                            <Route exact path={'/workshop'} component={ArticleList}/>\n                            <Route exact path={'/workshop/:id'} component={Workshop}/>\n                            <Route exact path={'/catalog'} component={Catalog}/>\n                            <Route exact path={'/catalog/:category/:search'} component={ProductList}/>\n                            <Route exact path={'/catalog/:category'} component={ProductList}/>\n                            <Route exact path={'/about'} component={About}/>\n                            <Route exact path=\"/register\" render={() => (this.props.token !== false ?\n                                (<Redirect to={'/login'}/>) :\n                                (<RegForm/>)\n                            )}/>\n                            <Route exact path=\"/password/reset\" render={() => (this.props.token !== false ?\n                                (<Redirect to={'/login'}/>) :\n                                (<ResetForm/>)\n                            )}/>\n                            <Route exact path=\"/login\" render={() => (this.props.token !== false ?\n                                (<Redirect to={this.props.from !== '/login' ? this.props.from : '/'}/>) :\n                                (<LoginForm/>)\n                            )}/>\n                        </Switch>\n                    </div>\n                    {/*<div className='col-md-2'></div>*/}\n                </div>\n                <ScrollUpButton/>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({\n        token: state.token\n    }),\n    dispatch => ({})\n)(PublicLayout));\n","/**\n * Created by misha on 27.01.19.\n */\nimport React from 'react';\nimport AbstractForm from '../abstract/form';\nimport { connect } from 'react-redux';\n\nclass ProductUpdate extends AbstractForm {\n    constructor(props)\n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        this.setState({loading: true});\n\n        let data = new FormData();\n        data.append('file', this.fileInput.files[0]);\n        data.append('her', 'her');\n\n        let _this = this;\n\n        this.state.request(\n            'product/update',\n            'POST',\n            data,\n            {},\n            function (response)\n            {\n                _this.setState({loading: false, message: response.message});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    viewForm() {\n        return (\n            <div className=\"w-75\">\n                <h4 className=\"text-center\">Обновить данные о продуктах</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        name=\"file\"\n                        type=\"file\"\n                        required={true}\n                        placeholder={\"Файл с даными:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.fileInput = input}}\n                    />\n                    <br/>\n                    <p className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-success\">\n                            <i className={'fa fa-upload'}> <span>Загрузить файл</span></i>\n                        </button>\n                    </p>\n                </form>\n                {this.state.message ?\n                    <div className=\"alert alert-success\" role=\"alert\">{this.state.message}</div> : ''}\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        store: state,\n    }),\n    dispatch => ({\n\n    })\n)(ProductUpdate);","import React, {Component} from 'react';\nimport request from \"../../services/ajaxManager\";\n\nclass NoImageList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            products: [],\n        };\n    }\n\n    componentDidMount() {\n        this.handleGet();\n    }\n\n    handleGet() {\n        let _this = this;\n        request(\n            'product/without_image',\n            'GET',\n            null,\n            {},\n            function (response) {\n                _this.setState({products: response});\n            },\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Товары без изображения:</h1>\n                <table className={'table table-striped table-hover'}>\n                    <thead>\n                    <tr>\n                        <th>Код:</th>\n                        <th>Наименование:</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.products.map((item, key) => {\n                        return (\n                            <tr key={key}>\n                                <td>\n                                    {item.id}\n                                </td>\n                                <td>\n                                    {item.title}\n                                </td>\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default NoImageList;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport request from '../../../services/ajaxManager';\n\nclass NewsList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            news: [],\n            add: false,\n            edit: null,\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet();\n    }\n\n    handleGet()\n    {\n        let _this = this;\n        request(\n            'news/news',\n            'GET',\n            null,\n            {},\n            function (response)\n            {\n                _this.setState({news: response});\n            },\n        );\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n\n        let data = new FormData();\n        data.append('photo', this.fileInput.files[0]);\n        data.append('title', this.titleInput.value);\n        data.append('type', 'news');\n        data.append('short_content', this.contentInput.value);\n\n        let _this = this;\n\n        request(\n            'news/',\n            'POST',\n            data,\n            {},\n            function (response)\n            {\n                let arr = _this.state.news;\n                arr.push(response);\n                _this.setState({news: arr, add: false});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    handleEdit(key)\n    {\n        let data = {\n            id: this.state.news[key].id,\n            title: this.titleEditInput.value,\n            short_content: this.contentEditInput.value,\n        };\n\n        let _this = this;\n\n        request(\n            'news/',\n            'PUT',\n            data,\n            {},\n            function (response)\n            {\n                let arr = _this.state.news;\n                arr[key] = response;\n                _this.setState({news: arr, edit: null});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    handleDelete(key)\n    {\n        let data = {\n            id: this.state.news[key].id,\n        };\n\n        let _this = this;\n\n        request(\n            'news/',\n            'DELETE',\n            data,\n            {},\n            function (response)\n            {\n                let arr = _this.state.news;\n                arr.splice(key, 1)\n                _this.setState({news: arr});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    viewAdd() {\n        if (this.state.add) {\n            return (\n                <tr>\n                    <td colSpan={4}>\n                        <form onSubmit={this.handleSubmit}>\n                            <input\n                                name=\"title\"\n                                type=\"text\"\n                                required={true}\n                                placeholder={\"Заголовок:*\"}\n                                className={'form-control '}\n                                ref={(input) => {this.titleInput = input}}\n                            />\n                            <input\n                                name=\"desc\"\n                                type=\"text\"\n                                required={true}\n                                placeholder={\"Описание:*\"}\n                                className={'form-control '}\n                                ref={(input) => {this.contentInput = input}}\n                            />\n                            <input\n                                name=\"file\"\n                                type=\"file\"\n                                required={true}\n                                placeholder={\"Файл с даными:*\"}\n                                className={'form-control '}\n                                accept=\"image/*\"\n                                ref={(input) => {this.fileInput = input}}\n                            />\n                            <br/>\n                            <p className=\"text-center\">\n                                <button type=\"submit\" className=\"btn btn-success\">\n                                    <i className={'fa fa-plus'}> Загрузить файл</i>\n                                </button>\n                                <button className={'btn btn-warning'} onClick={() =>  {this.setState({add: false})}}>\n                                    <i className={'fa fa-times'}> Отмена</i>\n                                </button>\n                            </p>\n                        </form>\n                    </td>\n                </tr>\n            );\n        }\n        else {\n            return(\n                <tr>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td>\n                        <button className={'btn btn-success'} onClick={() => {this.setState({add: true})}}>\n                            <i className={'fa fa-plus'}> Добавить новость</i>\n                        </button>\n                    </td>\n                </tr>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h4 className=\"text-center\">Управление новостями</h4>\n                <table className={\"table table-striped table-hover\"}>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Заголовок</th>\n                            <th>Описание</th>\n                            <th>Управление</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.viewAdd() }\n                        { this.state.news.length > 0 ? this.state.news.map((item, key) => {\n                            if (this.state.edit === key) {\n                                return(\n                                    <tr key={key}>\n                                        <td>{key + 1}</td>\n                                        <td><input\n                                            name=\"title\"\n                                            type=\"text\"\n                                            required={true}\n                                            placeholder={\"Заголовок:*\"}\n                                            defaultValue={item.title}\n                                            className={'form-control '}\n                                            ref={(input) => {this.titleEditInput = input}}\n                                        /></td>\n                                        <td>\n                                            <input\n                                                name=\"desc\"\n                                                type=\"text\"\n                                                required={true}\n                                                placeholder={\"Содержание:*\"}\n                                                defaultValue={item.short_content}\n                                                className={'form-control '}\n                                                ref={(input) => {this.contentEditInput = input}}\n                                            />\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-success\"\n                                                    onClick={() => this.handleEdit(key)}>\n                                                <i className={'fa fa-save'}> Сохранить</i>\n                                            </button>\n                                            <button className={'btn btn-warning'}\n                                                    onClick={() =>  {this.setState({edit: null})}}>\n                                                <i className={'fa fa-times'}> Отмена</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                );\n                            }\n\n                            return (\n                                <tr key={key}>\n                                    <td>{key + 1}</td>\n                                    <td>{item.title}</td>\n                                    <td>{item.short_content}</td>\n                                    <td>\n                                        <button className={'btn btn-primary'}\n                                                onClick={() => {this.setState({edit: key})}}>\n                                            <i className={'fa fa-edit'}> Изменить</i>\n                                        </button>\n                                        <button className={'btn btn-danger'}\n                                                onClick={() => this.handleDelete(key)}>\n                                            <i className={'fa fa-trash'}> Удалить</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                            );\n                        }) : <tr>\n                            <td colSpan={4}>Список новостей пуст</td>\n                        </tr> }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default NewsList;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport request from '../../../services/ajaxManager';\n\nclass StocksList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.state = {\n            news: [],\n            add: false,\n            edit: null,\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet();\n    }\n\n    handleGet()\n    {\n        let _this = this;\n        request(\n            'news/stocks',\n            'GET',\n            null,\n            {},\n            function (response)\n            {\n                _this.setState({news: response});\n            },\n        );\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n\n        let data = new FormData();\n        data.append('photo', this.fileInput.files[0]);\n        data.append('title', this.titleInput.value);\n        data.append('type', 'stocks');\n        data.append('short_content', this.contentInput.value);\n\n        let _this = this;\n\n        request(\n            'news/',\n            'POST',\n            data,\n            {},\n            function (response)\n            {\n                let arr = _this.state.news;\n                arr.push(response);\n                _this.setState({news: arr, add: false});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    handleEdit(key)\n    {\n        let data = {\n            id: this.state.news[key].id,\n            title: this.titleEditInput.value,\n            short_content: this.contentEditInput.value,\n        };\n\n        let _this = this;\n\n        request(\n            'news/',\n            'PUT',\n            data,\n            {},\n            function (response)\n            {\n                let arr = _this.state.news;\n                arr[key] = response;\n                _this.setState({news: arr, edit: null});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    handleDelete(key)\n    {\n        let data = {\n            id: this.state.news[key].id,\n        };\n\n        let _this = this;\n\n        request(\n            'news/',\n            'DELETE',\n            data,\n            {},\n            function (response)\n            {\n                let arr = _this.state.news;\n                arr.splice(key, 1)\n                _this.setState({news: arr});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    viewAdd() {\n        if (this.state.add) {\n            return (\n                <tr>\n                    <td colSpan={4}>\n                        <form onSubmit={this.handleSubmit}>\n                            <input\n                                name=\"title\"\n                                type=\"text\"\n                                required={true}\n                                placeholder={\"Заголовок:*\"}\n                                className={'form-control '}\n                                ref={(input) => {this.titleInput = input}}\n                            />\n                            <input\n                                name=\"desc\"\n                                type=\"text\"\n                                required={true}\n                                placeholder={\"Описание:*\"}\n                                className={'form-control '}\n                                ref={(input) => {this.contentInput = input}}\n                            />\n                            <input\n                                name=\"file\"\n                                type=\"file\"\n                                required={true}\n                                placeholder={\"Файл с даными:*\"}\n                                className={'form-control '}\n                                accept=\"image/*\"\n                                ref={(input) => {this.fileInput = input}}\n                            />\n                            <br/>\n                            <p className=\"text-center\">\n                                <button type=\"submit\" className=\"btn btn-success\">\n                                    <i className={'fa fa-plus'}> Загрузить файл</i>\n                                </button>\n                                <button className={'btn btn-warning'} onClick={() =>  {this.setState({add: false})}}>\n                                    <i className={'fa fa-times'}> Отмена</i>\n                                </button>\n                            </p>\n                        </form>\n                    </td>\n                </tr>\n            );\n        }\n        else {\n            return(\n                <tr>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td>\n                        <button className={'btn btn-success'} onClick={() => {this.setState({add: true})}}>\n                            <i className={'fa fa-plus'}> Добавить акцию</i>\n                        </button>\n                    </td>\n                </tr>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h4 className=\"text-center\">Управление акциями</h4>\n                <table className={\"table table-striped table-hover\"}>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Заголовок</th>\n                            <th>Описание</th>\n                            <th>Управление</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.viewAdd() }\n                        { this.state.news.length > 0 ? this.state.news.map((item, key) => {\n                            if (this.state.edit === key) {\n                                return(\n                                    <tr key={key}>\n                                        <td>{key + 1}</td>\n                                        <td><input\n                                            name=\"title\"\n                                            type=\"text\"\n                                            required={true}\n                                            placeholder={\"Заголовок:*\"}\n                                            defaultValue={item.title}\n                                            className={'form-control '}\n                                            ref={(input) => {this.titleEditInput = input}}\n                                        /></td>\n                                        <td>\n                                            <input\n                                                name=\"desc\"\n                                                type=\"text\"\n                                                required={true}\n                                                placeholder={\"Содержание:*\"}\n                                                defaultValue={item.short_content}\n                                                className={'form-control '}\n                                                ref={(input) => {this.contentEditInput = input}}\n                                            />\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-success\"\n                                                    onClick={() => this.handleEdit(key)}>\n                                                <i className={'fa fa-save'}> Сохранить</i>\n                                            </button>\n                                            <button className={'btn btn-warning'}\n                                                    onClick={() =>  {this.setState({edit: null})}}>\n                                                <i className={'fa fa-times'}> Отмена</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                );\n                            }\n\n                            return (\n                                <tr key={key}>\n                                    <td>{key + 1}</td>\n                                    <td>{item.title}</td>\n                                    <td>{item.short_content}</td>\n                                    <td>\n                                        <button className={'btn btn-primary'}\n                                                onClick={() => {this.setState({edit: key})}}>\n                                            <i className={'fa fa-edit'}> Изменить</i>\n                                        </button>\n                                        <button className={'btn btn-danger'}\n                                                onClick={() => this.handleDelete(key)}>\n                                            <i className={'fa fa-trash'}> Удалить</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                            );\n                        }) : <tr>\n                            <td colSpan={4}>Список акций пуст</td>\n                        </tr> }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default StocksList;\n","import React, {Component} from 'react';\nimport request from \"../../services/ajaxManager\";\nimport { serverUrl } from \"../../services/parameters\";\n\nclass ExportCategoryList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            categories: [],\n        };\n    }\n\n    componentDidMount() {\n        this.handleGet();\n    }\n\n    handleGet() {\n        let _this = this;\n        request(\n            'product/categories',\n            'GET',\n            null,\n            {},\n            function (response) { console.log(response);\n                _this.setState({categories: response});\n            },\n        );\n    }\n\n    handleExport(id) {\n        window.open(serverUrl + 'product/csv/' + id + '/' + (id - 5), '__blank');\n        // request(\n        //     'product/csv/' + id,\n        //     'GET',\n        //     null,\n        //     {},\n        //     function (response) {\n        //         console.log(response);\n        //     },\n        // );\n    }\n\n    viewTr(item, depth) {\n        let _this = this;\n        let array = [];\n\n        let str = '';\n        for (let i = 0; i < depth; i++) {\n            str += '>';\n        }\n\n        array.push(<tr key={item.id}>\n            <td>\n                {str} {item.id}\n            </td>\n            <td>\n                {item.title}\n            </td>\n            <td>\n                <button className=\"btn btn-success\" onClick={() => this.handleExport(item.id)}>\n                    Экспортировать данные\n                </button>\n            </td>\n        </tr>);\n\n        if (item.children)\n        {\n            item.children.forEach(function(element) {\n                (_this.viewTr(element, depth + 1)).forEach(function(p) {array.push(p)});\n            });\n        }\n\n        return(array);\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Экспорт данных:</h1>\n                <table className={'table table-striped table-hover'}>\n                    <thead>\n                    <tr>\n                        <th>Код:</th>\n                        <th>Наименование:</th>\n                        <th>Экспорт</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.categories.map((item, key) => {\n                        return (\n                            this.viewTr(item, 0)\n                        );\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default ExportCategoryList;\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nimport request from '../../services/ajaxManager';\n\nclass ArticleList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.onEditorStateChange = this.onEditorStateChange.bind(this);\n        this.onEditorStateChangeE = this.onEditorStateChangeE.bind(this);\n\n        this.state = {\n            articles: [],\n            add: false,\n            edit: null,\n            editorState: EditorState.createEmpty(),\n            editorStateE: EditorState.createEmpty(),\n        };\n    }\n\n    componentWillMount() {\n        this.handleGet();\n    }\n\n    handleGet() {\n        let _this = this;\n        request(\n            'article/',\n            'GET',\n            null,\n            {},\n            function (response) {\n                _this.setState({articles: response});\n            },\n        );\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        let data = new FormData();\n        data.append('title', this.titleInput.value);\n        data.append('content', draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())));\n\n        let _this = this;\n\n        request(\n            'article/',\n            'POST',\n            data,\n            {},\n            function (response) {\n                let arr = _this.state.articles;\n                arr.push(response);\n                _this.setState({articles: arr, add: false});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    handleEdit(key) {\n        let data = {\n            id: this.state.articles[key].id,\n            title: this.titleEditInput.value,\n            content: draftToHtml(convertToRaw(this.state.editorStateE.getCurrentContent())),\n        };\n\n        let _this = this;\n\n        request(\n            'article/',\n            'PUT',\n            data,\n            {},\n            function (response) {\n                let arr = _this.state.articles;\n                arr[key] = response;\n                _this.setState({articles: arr, edit: null, editorStateE: EditorState.createEmpty()});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    handleDelete(key) {\n        let data = {\n            id: this.state.articles[key].id,\n        };\n\n        let _this = this;\n\n        request(\n            'article/',\n            'DELETE',\n            data,\n            {},\n            function (response) {\n                let arr = _this.state.articles;\n                arr.splice(key, 1);\n                _this.setState({articles: arr});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    onEditorStateChange(editorState)\n    {\n        this.setState({\n            editorState,\n        });\n    };\n\n    onEditorStateChangeE(editorStateE)\n    {\n        this.setState({\n            editorStateE,\n        });\n    };\n\n    viewAdd() {\n        if (this.state.add) {\n            return (\n                <tr>\n                    <td colSpan={3}>\n                        <form onSubmit={this.handleSubmit}>\n                            <input\n                                name=\"title\"\n                                type=\"text\"\n                                required={true}\n                                placeholder={\"Заголовок:*\"}\n                                className={'form-control '}\n                                ref={(input) => {\n                                    this.titleInput = input\n                                }}\n                            />\n                            <br/>\n                            <label>Текст статьи</label>\n                            <Editor\n                                editorState={this.state.editorState}\n                                toolbarClassName=\"toolbarClassName\"\n                                wrapperClassName=\"wrapperClassName\"\n                                editorClassName=\"editorClassName\"\n                                editorStyle={{border: '1px solid #ffffff', backgroundColor: '#ffffff',}}\n                                onEditorStateChange={this.onEditorStateChange}\n                                toolbar={{\n                                    options: ['inline', 'blockType', 'fontSize', 'list', 'textAlign', 'colorPicker', 'link', 'embedded', 'emoji', 'image', 'remove', 'history'],\n                                }}\n                            />\n                            <br/>\n                            <p className=\"text-center\">\n                                <button type=\"submit\" className=\"btn btn-success\">\n                                    <i className={'fa fa-plus'}> Добавить</i>\n                                </button>\n                                <button className={'btn btn-warning'} onClick={() => {\n                                    this.setState({add: false})\n                                }}>\n                                    <i className={'fa fa-times'}> Отмена</i>\n                                </button>\n                            </p>\n                        </form>\n                    </td>\n                </tr>\n            );\n        }\n        else {\n            return (\n                <tr>\n                    <td></td>\n                    <td></td>\n                    <td>\n                        <button className={'btn btn-success'} onClick={() => {\n                            this.setState({add: true, editorState: EditorState.createEmpty()})\n                        }}>\n                            <i className={'fa fa-plus'}> Добавить</i>\n                        </button>\n                    </td>\n                </tr>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h4 className=\"text-center\">Управление швейным цехом</h4>\n                <table className={\"table table-striped table-hover\"}>\n                    <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Заголовок</th>\n                        <th>Управление</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    { this.viewAdd() }\n                    { this.state.articles.length > 0 ? this.state.articles.map((item, key) => {\n                            if (this.state.edit === key) {\n                                return (\n                                    <tr key={key}>\n                                        <td>{key + 1}</td>\n                                        <td>\n                                            <input\n                                                name=\"title\"\n                                                type=\"text\"\n                                                required={true}\n                                                placeholder={\"Заголовок:*\"}\n                                                defaultValue={item.title}\n                                                className={'form-control '}\n                                                ref={(input) => {\n                                                    this.titleEditInput = input\n                                                }}\n                                            />\n                                            <br/>\n                                            <label>Текст статьи</label>\n                                            <Editor\n                                                editorState={this.state.editorStateE}\n                                                initialContentState={item.content ? item.content : ''}\n                                                toolbarClassName=\"toolbarClassName\"\n                                                wrapperClassName=\"wrapperClassName\"\n                                                editorClassName=\"editorClassName\"\n                                                editorStyle={{border: '1px solid #ffffff', backgroundColor: '#ffffff',}}\n                                                onEditorStateChange={this.onEditorStateChangeE}\n                                                toolbar={{\n                                                    options: ['inline', 'blockType', 'fontSize', 'list', 'textAlign', 'colorPicker', 'link', 'embedded', 'emoji', 'image', 'remove', 'history'],\n                                                }}\n                                            />\n                                        </td>\n                                        <td>\n                                            <button className=\"btn btn-success\"\n                                                    onClick={() => this.handleEdit(key)}>\n                                                <i className={'fa fa-save'}> Сохранить</i>\n                                            </button>\n                                            <button className={'btn btn-warning'}\n                                                    onClick={() => {\n                                                        this.setState({edit: null})\n                                                    }}>\n                                                <i className={'fa fa-times'}> Отмена</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                );\n                            }\n\n                            return (\n                                <tr key={key}>\n                                    <td>{key + 1}</td>\n                                    <td>{item.title}</td>\n                                    <td>\n                                        <button className={'btn btn-primary'}\n                                                onClick={() => {\n                                                    let contentBlock = htmlToDraft(item.content);\n                                                    if (contentBlock) {\n                                                        let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n                                                        let editorStateE = EditorState.createWithContent(contentState);\n                                                        this.setState({editorStateE: editorStateE, edit: key});\n                                                    }\n                                                    else {\n                                                        this.setState({edit: key});\n                                                    }\n                                                }}>\n                                            <i className={'fa fa-edit'}> Изменить</i>\n                                        </button>\n                                        <button className={'btn btn-danger'}\n                                                onClick={() => this.handleDelete(key)}>\n                                            <i className={'fa fa-trash'}> Удалить</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                            );\n                        }) : <tr>\n                            <td colSpan={4}>Список услуг швейного цеха пуст</td>\n                        </tr> }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default ArticleList;\n","/**\n * Created by misha on 27.01.19.\n */\nimport React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\n\nimport Menu from '../menu';\nimport ProductUpdate from './product_update';\nimport NoImageList from './products_no_image_list';\nimport NewsList from './news/news';\nimport StocksList from './news/stocks';\nimport ExportCategoryList from './to_csv';\nimport ArticleList from './article';\n\nclass PrivateLayout extends Component {\n    componentDidMount() {\n        if (this.props.token === false || this.props.user.roles === undefined || this.props.user.roles.indexOf('ROLE_ADMIN') === -1)\n        {\n            this.props.history.replace('/login');\n        }\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if (this.props.location.pathname !== nextProps.location.pathname) {\n            this.props.updateFrom(this.props.location.pathname);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Menu />\n                <div className=\"row content\">\n                    <div className='col-md-2'></div>\n                    <div className='col-md-8'>\n                        <Switch>\n                            <Route exact path=\"/admin/product/update\" component={ProductUpdate}/>\n                            <Route exact path=\"/admin/product/image\" component={NoImageList}/>\n                            <Route exact path=\"/admin/news\" component={NewsList}/>\n                            <Route exact path=\"/admin/export\" component={ExportCategoryList}/>\n                            <Route exact path=\"/admin/stocks\" component={StocksList}/>\n                            <Route exact path=\"/admin/workshop\" component={ArticleList}/>\n                        </Switch>\n                    </div>\n                    <div className='col-md-2'>\n                    </div>\n                </div>\n                <ScrollUpButton />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({\n        token: state.token,\n        user: state.user,\n    }),\n    dispatch => ({})\n)(PrivateLayout));\n","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport request from '../../services/ajaxManager';\nimport {connect} from \"react-redux\";\n\nclass Favorite extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleBasketAdd = this.handleBasketAdd.bind(this);\n\n        this.state = {\n            products: [],\n            form: [],\n        };\n    }\n\n    componentDidMount() {\n        this.handleGet();\n    }\n\n    handleGet()\n    {\n        let _this = this;\n        request(\n            'product/favorite',\n            'GET',\n            null,\n            {},\n            function (response)\n            {\n                _this.setState({products: response});\n            },\n        );\n    }\n\n    handleDelete(key)\n    {\n        let data = {\n            id: this.state.products[key].id,\n        };\n\n        let _this = this;\n\n        request(\n            'product/favorite',\n            'DELETE',\n            data,\n            {},\n            function (response)\n            {\n                let arr = _this.state.products;\n                arr.splice(key, 1);\n                _this.setState({products: arr});\n                _this.props.onReloadMenu();\n            },\n            this.state.errorCallback\n        );\n    }\n\n    handleBasketAdd(key) {\n        let data = {\n            product: this.state.products[key].id,\n            count: this.countInput.value,\n        };\n\n        let _this = this;\n\n        request(\n            'product/basket',\n            'POST',\n            data,\n            {},\n            function (response)\n            {\n                let form = _this.state.form;\n                form.push(_this.state.products[key].id);\n                _this.setState({message: response.message, form: form});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <h4 className=\"text-center\">Избранные товары:</h4>\n                <table className={\"table table-striped table-hover\"}>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th></th>\n                            <th>Описание</th>\n                            <th>Управление</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.state.products.length > 0 ? this.state.products.map((item, key) => {\n                            return (\n                                <tr key={key}>\n                                    <td>{key + 1}</td>\n                                    <td>\n                                        <img className=\"fav-img\" src={item.photo === 'placeholder.jpg' ? require('../../images/image-placeholder.png') : 'https://api.universal.tom.ru/uploads/products/' + item.photo } alt=\"Card image cap\"/>\n                                    </td>\n                                    <td>\n                                        <h5 className={'text-left'}>{item.title}</h5>\n                                        <p className=\"card-text\">\n                                            <small className=\"text-muted\">Код товара: {item.id} </small> {item.new ? <span className=\"badge badge-success\">Новинка!</span> : ''} {item.stock ? <span className=\"badge badge-danger\">Акция!</span> : ''}<br/>\n                                            Цена: {item.price} р.\n                                        </p>\n                                        {this.state.form.indexOf(item.id) === -1 ?\n                                            <form className=\"form-inline\" onSubmit={(e) => {e.preventDefault()}}>\n                                                <div className=\"input-group mb-2 mr-sm-2\">\n                                                    <input\n                                                        name=\"desc\"\n                                                        type=\"number\"\n                                                        required={true}\n                                                        placeholder={\"Количество:\"}\n                                                        min={1}\n                                                        defaultValue={1}\n                                                        className=\"form-control mb-1 mr-sm-1\"\n                                                        ref={(input) => {this.countInput = input}}\n                                                    />\n                                                    <div className=\"input-group-prepend\">\n                                                        <button className=\"btn btn-success mb-1 \" onClick={() => this.handleBasketAdd(key)}>\n                                                            <i className={'fa fa-cart-plus'}></i>\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </form> :\n                                            <div className=\"alert alert-success\" role=\"alert\">\n                                                <i className={'fa fa-check'}> <span>{this.state.message}</span></i>\n                                            </div>\n                                        }\n                                    </td>\n                                    <td>\n                                        <button className={'btn btn-danger'}\n                                                onClick={() => this.handleDelete(key)}>\n                                            <i className={'fa fa-trash'}> <span>Удалить</span></i>\n                                        </button>\n                                    </td>\n                                </tr>\n                            );\n                        }) : <tr>\n                            <td colSpan={4}>Список избранных товаров пуст</td>\n                        </tr> }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({\n        token: state.token,\n    }),\n    dispatch => ({\n        onReloadMenu: () => {\n            dispatch({ type: 'RELOAD', payload: true })\n        },\n    })\n)(Favorite));\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport request from '../../services/ajaxManager';\n\nclass Basket extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleUpdate = this.handleUpdate.bind(this);\n\n        this.state = {\n            products: [],\n        };\n    }\n\n    componentDidMount() {\n        this.handleGet();\n    }\n\n    handleGet()\n    {\n        let _this = this;\n        request(\n            'product/basket',\n            'GET',\n            null,\n            {},\n            function (response)\n            {\n                _this.setState({products: response});\n            },\n        );\n    }\n\n    handleUpdate(key, value) {\n        let data = {\n            id: this.state.products[key].id,\n            count: value\n        };\n\n        let _this = this;\n\n        request(\n            'product/basket',\n            'PUT',\n            data,\n            {},\n            function (response)\n            {\n                let arr = _this.state.products;\n                arr[key] = response;\n                _this.setState({products: arr});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    handleDelete(key)\n    {\n        let data = {\n            id: this.state.products[key].id,\n        };\n\n        let _this = this;\n\n        request(\n            'product/basket',\n            'DELETE',\n            data,\n            {},\n            function (response)\n            {\n                let arr = _this.state.products;\n                arr.splice(key, 1);\n                _this.setState({products: arr});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    render() {\n        let sum = 0;\n        this.state.products.forEach((item) => {\n           sum += item.count * item.product.price;\n        });\n\n        return (\n            <div>\n                <h4 className=\"text-center\">Моя корзина:</h4>\n                <table className={\"table table-striped table-hover\"}>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th></th>\n                            <th>Описание</th>\n                            <th>Управление</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.state.products.length > 0 ? this.state.products.map((item, key) => {\n                            return (\n                                <tr key={key}>\n                                    <td>{key + 1}</td>\n                                    <td>\n                                        <img className=\"fav-img\" src={item.product.photo === 'placeholder.jpg' ? require('../../images/image-placeholder.png') : 'https://api.universal.tom.ru/uploads/products/' + item.product.photo } alt=\"Card image cap\"/>\n                                    </td>\n                                    <td>\n                                        <h5 className={'text-left'}>{item.product.title}</h5>\n                                        <p className=\"card-text\">\n                                            <small className=\"text-muted\">Код товара: {item.product.id} </small> {item.new ? <span className=\"badge badge-success\">Новинка!</span> : ''} {item.stock ? <span className=\"badge badge-danger\">Акция!</span> : ''}<br/>\n                                            Цена: {item.product.price} * {item.count} = {item.product.price * item.count} р.\n                                            {item.product.balance == 0 ? <div className=\"alert alert-danger\" role=\"alert\">\n                                                    Этого товара нет в наличии. При оформлении заказа он не будет учтен.\n                                                </div> : ''}\n                                        </p>\n                                        <form className=\"form-inline\" onSubmit={(e) => {e.preventDefault()}}>\n                                            <div className=\"input-group mb-2 mr-sm-2\">\n                                                <input\n                                                    name=\"desc\"\n                                                    type=\"number\"\n                                                    required={true}\n                                                    placeholder={\"Количество:\"}\n                                                    min={1}\n                                                    defaultValue={item.count}\n                                                    className=\"form-control mb-1 mr-sm-1\"\n                                                    onChange={(e) => {\n                                                        this.handleUpdate(key, e.target.value);\n                                                    }}\n                                                />\n                                            </div>\n                                        </form>\n                                    </td>\n                                    <td>\n                                        <button className={'btn btn-danger'}\n                                                onClick={() => this.handleDelete(key)}>\n                                            <i className={'fa fa-trash'}> <span>Удалить</span></i>\n                                        </button>\n                                    </td>\n                                </tr>\n                            );\n                        }) : <tr>\n                            <td colSpan={4}>Моя корзина пуста</td>\n                        </tr> }\n                        {this.state.products.length > 0 ? <tr>\n                            <td colSpan={3}>\n                                <p className={'h5'}>Итого: {sum} рублей.</p>\n                            </td>\n                            <td>\n                                <Link to={'/user/order/add'} className={'btn btn-success'}>\n                                    <i className={'fa fa-check'}> <span>Оформить заказ</span></i>\n                                </Link>\n                            </td>\n                        </tr> : null}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Basket;\n","/**\n * Created by misha on 27.01.19.\n */\nimport React from 'react';\nimport AbstractForm from '../abstract/form';\nimport { connect } from 'react-redux';\n\nclass PassChange extends AbstractForm {\n    constructor(props)\n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        this.setState({loading: true});\n\n        let _this = this;\n        let data = {\n            'current_pass': this.opassInput.value,\n            'new_pass': this.cpassInput.value,\n            'confirm_pass': this.cpassInput.value,\n        };\n\n        this.state.request(\n            'user/change/password',\n            'POST',\n            data,\n            {},\n            function (response)\n            {\n                _this.setState({loading: false});\n                _this.props.history.push('/');\n            },\n            this.state.errorCallback\n        );\n    }\n\n    viewForm() {\n        return (\n            <div className=\"w-75\">\n                <h4 className=\"text-center\">Смена пароля</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        name=\"pass\"\n                        type=\"password\"\n                        required={true}\n                        placeholder={\"Старый пароль:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.opassInput = input}}\n                    />\n                    <input\n                        name=\"pass\"\n                        type=\"password\"\n                        required={true}\n                        placeholder={\"Новый пароль:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.passInput = input}}\n                    />\n                    <input\n                        name=\"pass\"\n                        type=\"password\"\n                        required={true}\n                        placeholder={\"Подтвердите пароль:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.cpassInput = input}}\n                    />\n                    <br/>\n                    <p className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-success\">\n                            <i className={'fa fa-edit'}> <span>Сменить пароль</span></i>\n                        </button>\n                    </p>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        store: state,\n    }),\n    dispatch => ({\n\n    })\n)(PassChange);","/**\n * Created by misha on 27.01.19.\n */\nimport React from 'react';\nimport AbstractForm from '../abstract/form';\nimport { connect } from 'react-redux';\n\nclass DataChange extends AbstractForm {\n    constructor(props)\n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        this.setState({loading: true});\n\n        let _this = this;\n        let data = {\n            'email': this.emailInput.value,\n            'address': this.addressInput.value,\n            'phone': this.phoneInput.value,\n            'fio': this.nameInput.value,\n        };\n\n        this.state.request(\n            'user/edit',\n            'PUT',\n            data,\n            {},\n            function (response)\n            {\n                _this.props.onAddUser(response);\n                _this.setState({loading: false});\n            },\n            this.state.errorCallback\n        );\n    }\n\n    viewForm() {\n        return (\n            <div className=\"w-75\">\n                <h4 className=\"text-center\">Изменение данных пользователя</h4>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        name=\"email\"\n                        type=\"email\"\n                        required={true}\n                        placeholder={\"E-mail:*\"}\n                        defaultValue={this.props.user.email}\n                        minLength={5}\n                        className={'form-control '}\n                        ref={(input) => {this.emailInput = input}}\n                    />\n                    <input\n                        name=\"fio\"\n                        type=\"text\"\n                        required={true}\n                        placeholder={\"Имя:*\"}\n                        defaultValue={this.props.user.fio}\n                        className={'form-control '}\n                        ref={(input) => {this.nameInput = input}}\n                    />\n                    <input\n                        name=\"sname\"\n                        type=\"text\"\n                        required={true}\n                        placeholder={\"Телефон:*\"}\n                        defaultValue={this.props.user.phone}\n                        className={'form-control '}\n                        ref={(input) => {this.phoneInput = input}}\n                    />\n                    <input\n                        name=\"fname\"\n                        type=\"text\"\n                        required={true}\n                        defaultValue={this.props.user.address}\n                        placeholder={\"Адрес:*\"}\n                        className={'form-control '}\n                        ref={(input) => {this.addressInput = input}}\n                    />\n                    <br/>\n                    <p className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-success\">\n                            <i className={'fa fa-edit'}> <span>Изменить данные</span></i>\n                        </button>\n                    </p>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        user: state.user,\n    }),\n    dispatch => ({\n        onAddUser: (user) => {\n            dispatch({ type: 'ADD_USER', payload: user })\n        },\n    })\n)(DataChange);","/**\n * Created by misha on 27.01.19.\n */\nimport React from 'react';\nimport AbstractForm from '../abstract/form';\nimport { connect } from 'react-redux';\n\nclass OrderAdd extends AbstractForm {\n    constructor(props)\n    {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e)\n    {\n        e.preventDefault();\n        this.setState({loading: true});\n\n        let _this = this;\n        let data = {\n            'address': this.addressInput.value,\n            'phone': this.phoneInput.value,\n            'comment': this.commentInput.value ? this.commentInput.value : null,\n            'pay_type': 'money', //this.typeSelect.value,\n        };\n\n        this.state.request(\n            'order/',\n            'POST',\n            data,\n            {},\n            function (response)\n            {\n                _this.setState({loading: false});\n                _this.props.history.push('/user/order');\n            },\n            this.state.errorCallback\n        );\n    }\n\n    viewForm() {\n        return (\n            <div className=\"w-75\">\n                <h4 className=\"text-center\">Уточнение данных для заказа:</h4>\n                <p className={'text-left'}>\n                    ФИО: { this.props.user.fio } <br/>\n                    Email: {this.props.user.email}\n                </p>\n                <form onSubmit={this.handleSubmit}>\n                    <input\n                        name=\"email\"\n                        type=\"text\"\n                        required={true}\n                        placeholder={\"Телефон:*\"}\n                        defaultValue={this.props.user.phone}\n                        minLength={5}\n                        className={'form-control '}\n                        ref={(input) => {this.phoneInput = input}}\n                    />\n                    <input\n                        name=\"fio\"\n                        type=\"text\"\n                        required={true}\n                        placeholder={\"Адрес:*\"}\n                        defaultValue={this.props.user.address}\n                        className={'form-control '}\n                        ref={(input) => {this.addressInput = input}}\n                    />\n                    <input\n                        name=\"comment\"\n                        type=\"text\"\n                        required={false}\n                        maxLength={250}\n                        placeholder={\"Комментарий к заказу\"}\n                        className={'form-control '}\n                        ref={(input) => {this.commentInput = input}}\n                    />\n                    <p className={'text-left'}>\n                        Доставка по г.Томску от 3000 руб бесплатна (кроме отдаленных районов).<br/>\n                        Доставка по области Х руб/км.<br/>\n                        Доставка до терминала указанной покупателем транспортной компании (почтовой службы) бесплатна\n                    </p>\n                    {/*<label>Способ оплаты</label>*/}\n                    {/*<select className={'form-control'} ref={(input) => {this.typeSelect = input}}>*/}\n                    {/*    <option value={'card'}>Картой курьеру</option>*/}\n                    {/*    <option value={'money'}>Наличными курьеру</option>*/}\n                    {/*</select>*/}\n                    <br/>\n                    <p className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-success\">\n                            <i className={'fa fa-check'}> <span>Оформить заказ</span></i>\n                        </button>\n                    </p>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        user: state.user,\n    }),\n    dispatch => ({\n\n    })\n)(OrderAdd);","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport request from '../../services/ajaxManager';\n\nclass Orders extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleDuplicate = this.handleDuplicate.bind(this);\n\n        this.state = {\n            orders: [],\n            message: [],\n        };\n    }\n\n    componentDidMount() {\n        this.handleGet();\n    }\n\n    handleGet()\n    {\n        let _this = this;\n        request(\n            'order/',\n            'GET',\n            null,\n            {},\n            function (response)\n            {\n                _this.setState({orders: response});\n            },\n        );\n    }\n\n    handleDuplicate(id) {\n        let _this = this;\n        request(\n            'order/duplicate',\n            'POST',\n            {id: id},\n            {},\n            function (response)\n            {\n                let arr = _this.state.message;\n                arr[id] = response.message;\n                _this.setState({message: arr});\n            },\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <h4 className=\"text-center\">Мои заказы:</h4>\n                <table className={\"table table-striped table-hover\"}>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Описание</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.state.orders.length > 0 ? this.state.orders.map((order, key) => {\n                            let sum = 0;\n                            let date =  new Date(order.date);\n\n                            return (\n                                <tr key={key}>\n                                    <td>{key + 1}</td>\n                                    <td>\n                                        <div data-toggle=\"collapse\" data-target={\"#collapseExample\" + key} aria-expanded=\"false\" aria-controls={\"collapseExample\" + key}>\n                                            <p><b>Заказ от {date.getDate()}/{date.getMonth() + 1}/{date.getFullYear()}</b></p>\n                                        </div>\n                                        {order.items.map((item, key2) => {\n                                            let isNew = Math.ceil(Math.abs(((new Date()) - (new Date(item.product.updated))) / (1000 * 60 * 60 * 24))) < 14;\n                                            sum += item.count * item.product.price;\n\n                                            return(\n                                                <div key={key2} className=\"collapse\" id={\"collapseExample\" + key}>\n                                                    <h5 className={'text-left'}>{item.product.title}</h5>\n                                                    <p className=\"card-text\">\n                                                        <small className=\"text-muted\">Код товара: {item.product.id} </small> {item.product.new ? <span className=\"badge badge-success\">Новинка!</span> : ''} {item.product.stock ? <span className=\"badge badge-danger\">Акция!</span> : ''}<br/>\n                                                        Цена: {item.product.price} * {item.count} = {item.product.price * item.count} р.\n                                                        {item.product.balance == 0 ? <div className=\"alert alert-danger\" role=\"alert\">\n                                                                Этого товара нет в наличии. При оформлении заказа он не будет учтен.\n                                                            </div> : ''}\n                                                    </p>\n                                                    <br/>\n                                                </div>\n                                            );\n                                        })}\n                                        <p>\n                                            <b>Итого: {sum} рублей.</b>\n                                        </p>\n                                    </td>\n                                    <td>\n                                        {!this.state.message[order.id] ?\n                                            <button className={'btn btn-success'}\n                                                    onClick={() => this.handleDuplicate(order.id)}>\n                                                <i className={'fa fa-copy'}> Повторить заказ</i>\n                                            </button> :\n                                            <div className=\"alert alert-success\" role=\"alert\">\n                                                <i className={'fa fa-check'}> {this.state.message[order.id]}</i>\n                                            </div>\n                                        }\n                                    </td>\n                                </tr>\n                            );\n                        }) : <tr>\n                            <td colSpan={4}>Я еще ничего не заказывал(а)</td>\n                        </tr> }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Orders;\n","/**\n * Created by misha on 27.01.19.\n */\nimport React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\n\nimport Menu from '../menu';\nimport Favorite from './favorite';\nimport Basket from './basket';\nimport PassChange from './change_pass';\nimport DataChange from './change_data';\nimport OrderAdd from './order_add';\nimport Orders from './orders';\nimport CategoryList from \"../public/parts/category_list\";\nimport Footer from \"../public/footer\";\n\nclass UserLayout extends Component {\n    componentDidUpdate() {\n        if (this.props.token === false)\n        {\n            this.props.history.replace('/login');\n        }\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        if (this.props.location.pathname !== nextProps.location.pathname) {\n            this.props.updateFrom(this.props.location.pathname);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Menu />\n                <div className=\"row content\">\n                    <div className='col-md-3'>\n                        <CategoryList/>\n                    </div>\n                    <div className='col-md-9'>\n                        <Switch>\n                            <Route exact path=\"/user/favorite\" component={Favorite}/>\n                            <Route exact path=\"/user/order/add\" component={OrderAdd}/>\n                            <Route exact path=\"/user/order\" component={Orders}/>\n                            <Route exact path=\"/user/data/change\" component={DataChange}/>\n                            <Route exact path=\"/user/basket\" component={Basket}/>\n                            <Route exact path=\"/user/password/change\" component={PassChange}/>\n                        </Switch>\n                    </div>\n                </div>\n                <ScrollUpButton />\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state, ownProps) => ({\n        token: state.token\n    }),\n    dispatch => ({})\n)(UserLayout));\n","import React, {Component} from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Обновление состояния, чтобы при последующей отрисовке показать аварийный UI.\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, info) {\n        // Вы можете прологировать ошибку с помощью сервиса отчета об ошибках\n        //logErrorToMyService(error, info);\n    }\n\n    render() {\n      if (this.state.hasError) {\n        // Вы можете отрисовать любой резервный UI\n        return (\n            <div>\n                <h1>Ошибка...</h1>\n                <p>Пожалуйста, свяжитесь с нами ;-)</p>\n            </div>\n        );\n      }\n      return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","/**\n * Created by misha on 27.01.19.\n */\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport $ from 'jquery';\n\nclass Modal extends Component {\n    constructor(props, context)\n    {\n        super(props, context);\n\n        this.state = {\n            modal: props.modal,\n        };\n    }\n\n    componentDidMount() {\n        this.props.onClear();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({modal: nextProps.modal});\n    }\n\n    componentDidUpdate() {\n        if (this.props.modal.show) {\n            $('#myModal').show();\n        }\n        else {\n            $('#myModal').hide();\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" id=\"myModal\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">{this.state.modal.title}</h5>\n                            <button type=\"button\" className=\"close\"  aria-label=\"Close\"\n                                    onClick={() => this.props.onClear()}>\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <p>{this.state.modal.content}</p>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.props.onClear()}>\n                                {this.state.modal.btnText}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    state => ({\n        modal: state.modal,\n    }),\n    dispatch => ({\n        onClear: () => {\n            dispatch({ type: 'CLEAR_MODAL_DATA', payload: {} })\n        }\n    })\n)(Modal);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './App.css';\nimport PublicLayout from './components/public/layout';\nimport PrivateLayout from './components/admin/layout';\nimport UserLayout from './components/private/layout';\nimport ErrorBoundary from './components/errorBoundary';\nimport Modal from './components/modal';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.updateFrom = this.updateFrom.bind(this);\n\n        this.state = {\n            from: props.location.pathname,\n        };\n    }\n\n    updateFrom(from) {\n        this.setState({from: from});\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <ErrorBoundary>\n                    <Router>\n                        <Switch>\n                            <Route path=\"/admin\" component={() => <PrivateLayout updateFrom={this.updateFrom} />}/>\n                            <Route path=\"/user\" component={() => <UserLayout updateFrom={this.updateFrom} />}/>\n                            <Route path=\"/\" render={() => <PublicLayout from={this.state.from}\n                                                                        updateFrom={this.updateFrom} />}/>\n                        </Switch>\n                    </Router>\n                    <Modal />\n                </ErrorBoundary>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(\n    (state) => ({\n        loc: state.location\n    }),\n    dispatch => ({})\n)(App));\n","/**\n * Created by misha on 03.10.17.\n */\nlet defaultData = {\n    show: false,\n    title: '',\n    content: '',\n    btnText: 'OK'\n};\n\nexport default function modal(state = defaultData, action) {\n    switch(action.type)\n    {\n        case 'UPDATE_MODAL_DATA':\n            return action.payload;\n        case 'CLEAR_MODAL_DATA':\n            return defaultData;\n        default:\n            return state;\n    }\n}\n","/**\n * Created by misha on 15.09.17.\n */\nimport { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport token from './token';\nimport user from './user';\nimport modal from './modal';\nimport reload from './menu_reload';\n\nexport default combineReducers({\n    routing: routerReducer,\n    token,\n    user,\n    modal,\n    reload,\n});","/**\n * Created by misha on 03.10.17.\n */\nexport default function token(state = false, action) {\n    switch(action.type)\n    {\n        case 'ADD_TOKEN':\n            return action.payload;\n        case 'UPDATE_TOKEN':\n            return action.payload;\n        case 'DELETE_TOKEN':\n            return false;\n        default:\n            return state;\n    }\n}\n","/**\n * Created by misha on 03.10.17.\n */\nexport default function token(state = false, action) {\n    switch(action.type)\n    {\n        case 'ADD_USER':\n            return action.payload;\n        case 'UPDATE_USER':\n            return action.payload;\n        case 'DELETE_USER':\n            return false;\n        default:\n            return state;\n    }\n}\n","/**\n * Created by misha on 03.10.17.\n */\n\nexport default function reload(state = {reload: false}, action) {\n    switch(action.type)\n    {\n        case 'RELOAD':\n            return {reload: true};\n        case 'RELOADED':\n            return {reload: false};\n        default:\n            return state;\n    }\n}\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport reducers from \"../reducers\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport default () => {\n    let store = createStore(persistedReducer);\n    let persistor = persistStore(store);\n    return { store, persistor }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport $ from 'jquery';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { default as store } from './reducers/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\nrequire('bootstrap/dist/js/bootstrap.min.js');\n\nlet str = store();\nwindow.store = str;\n\nReactDOM.render(\n    <Provider store={str.store}>\n        <PersistGate loading={null} persistor={str.persistor}>\n            <Router>\n                <Switch>\n                    <Route path=\"/*\" component={App}/>\n                </Switch>\n            </Router>\n        </PersistGate>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/loading.2181d643.gif\";","module.exports = __webpack_public_path__ + \"static/media/image-placeholder.8a09e1b3.png\";"],"sourceRoot":""}